function GetRandomMsg(n) {
    var t = n.split("|");
    return t[Math.floor(Math.random() * t.length)]
}
function getHiddenProp() {
    var t = ["webkit", "moz", "ms", "o"], n;
    if ("hidden"in document)
        return "hidden";
    for (n = 0; n < t.length; n++)
        if (t[n] + "Hidden"in document)
            return t[n] + "Hidden";
    return null
}
function getVisibilityState() {
    var t = ["webkit", "moz", "ms", "o"], n;
    if ("visibilityState"in document)
        return "visibilityState";
    for (n = 0; n < t.length; n++)
        if (t[n] + "VisibilityState"in document)
            return t[n] + "VisibilityState";
    return null
}
function isHidden() {
    var n = getHiddenProp();
    return n ? document[n] : !1
}
function isPrerendered() {
    var n = getVisibilityState();
    return n ? document[n] != "prerender" ? !1 : document[n] : !1
}
function createCookie(n, t, i) {
    var r, u;
    i ? (r = new Date,
    r.setTime(r.getTime() + i * 864e5),
    u = "; expires=" + r.toGMTString()) : u = "";
    document.cookie = n + "=" + t + u + "; path=/"
}
function readCookie(n) {
    for (var t, r = n + "=", u = document.cookie.split(";"), i = 0; i < u.length; i++) {
        for (t = u[i]; t.charAt(0) == " "; )
            t = t.substring(1, t.length);
        if (t.indexOf(r) == 0)
            return t.substring(r.length, t.length)
    }
    return null
}
function eraseCookie(n) {
    createCookie(n, "", -1)
}
function getOrCreateTest(n, t, i) {
    var u = readCookie(n), r;
    return u == null ? (r = Math.random() < (t != null ? t : .5),
    createCookie(n, r.toString(), i != null ? i : 1 / 24),
    r) : u == (!0).toString()
}
function oneTimeTest(n, t) {
    var i = readCookie(n);
    return i == null ? (createCookie(n, (!1).toString(), t != null ? t : .5 / 24),
    !0) : !1
}
function trackEvent(n, t, i, r) {
    var f, u;
    if (config.trackEvents == !0) {
        var e = []
          , o = {
            idsite: config.analytics_id,
            rec: 1,
            url: window.location.href,
            rand: Math.floor(Math.random() * 1e9),
            e_c: n,
            e_a: t,
            e_n: i,
            e_v: r
        };
        for (f in o)
            e.push(encodeURI(f + "=" + o[f]));
        u = new XMLHttpRequest;
        u.open("POST", "https://ai.learnbrite.com/analytics.php", !0);
        u.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        u.send(e.join("&"));
        u.onreadystatechange = function() {
            this.readyState == 4 && this.status == 200
        }
    }
}
var $jscomp, $jscomp$lookupPolyfilledValue, isNaN, ResponsiveVoice, responsiveVoice, prerenderUsed;
if (typeof rvAgentPlayer != "undefined")
    throw new Error("ResponsiveVoice Website Agent is already running");
var rvAgentPlayer = {
    version: 1
}
  , rvApiKey = "RIUfoIzv"
  , rvApiEndpoint = "https://texttospeech.responsivevoice.org/v1/text:synthesize";
if (typeof responsiveVoice == "undefined" && ($jscomp = $jscomp || {},
$jscomp.scope = {},
$jscomp.arrayIteratorImpl = function(n) {
    var t = 0;
    return function() {
        return t < n.length ? {
            done: !1,
            value: n[t++]
        } : {
            done: !0
        }
    }
}
,
$jscomp.arrayIterator = function(n) {
    return {
        next: $jscomp.arrayIteratorImpl(n)
    }
}
,
$jscomp.ASSUME_ES5 = !1,
$jscomp.ASSUME_NO_NATIVE_MAP = !1,
$jscomp.ASSUME_NO_NATIVE_SET = !1,
$jscomp.SIMPLE_FROUND_POLYFILL = !1,
$jscomp.ISOLATE_POLYFILLS = !1,
$jscomp.FORCE_POLYFILL_PROMISE = !1,
$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION = !1,
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(n, t, i) {
    return n == Array.prototype || n == Object.prototype ? n : (n[t] = i.value,
    n)
}
,
$jscomp.getGlobal = function(n) {
    var t, i;
    for (n = ["object" == typeof globalThis && globalThis, n, "object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global],
    t = 0; t < n.length; ++t)
        if (i = n[t],
        i && i.Math == Math)
            return i;
    throw Error("Cannot find global object");
}
,
$jscomp.global = $jscomp.getGlobal(this),
$jscomp.IS_SYMBOL_NATIVE = "function" == typeof Symbol && "symbol" == typeof Symbol("x"),
$jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE,
$jscomp.polyfills = {},
$jscomp.propertyToPolyfillSymbol = {},
$jscomp.POLYFILL_PREFIX = "$jscp$",
$jscomp$lookupPolyfilledValue = function(n, t) {
    var i = $jscomp.propertyToPolyfillSymbol[t];
    return null == i ? n[t] : (i = n[i],
    void 0 !== i ? i : n[t])
}
,
$jscomp.polyfill = function(n, t, i, r) {
    t && ($jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated(n, t, i, r) : $jscomp.polyfillUnisolated(n, t, i, r))
}
,
$jscomp.polyfillUnisolated = function(n, t, i, r) {
    for (i = $jscomp.global,
    n = n.split("."),
    r = 0; r < n.length - 1; r++) {
        var u = n[r];
        if (!(u in i))
            return;
        i = i[u]
    }
    n = n[n.length - 1];
    r = i[n];
    t = t(r);
    t != r && null != t && $jscomp.defineProperty(i, n, {
        configurable: !0,
        writable: !0,
        value: t
    })
}
,
$jscomp.polyfillIsolated = function(n, t, i, r) {
    var u = n.split("."), f, e;
    for (n = 1 === u.length,
    r = u[0],
    r = !n && (r in $jscomp.polyfills) ? $jscomp.polyfills : $jscomp.global,
    f = 0; f < u.length - 1; f++) {
        if (e = u[f],
        !(e in r))
            return;
        r = r[e]
    }
    u = u[u.length - 1];
    i = $jscomp.IS_SYMBOL_NATIVE && "es6" === i ? r[u] : null;
    t = t(i);
    null != t && (n ? $jscomp.defineProperty($jscomp.polyfills, u, {
        configurable: !0,
        writable: !0,
        value: t
    }) : t !== i && (void 0 === $jscomp.propertyToPolyfillSymbol[u] && (i = 1e9 * Math.random() >>> 0,
    $jscomp.propertyToPolyfillSymbol[u] = $jscomp.IS_SYMBOL_NATIVE ? $jscomp.global.Symbol(u) : $jscomp.POLYFILL_PREFIX + i + "$" + u),
    $jscomp.defineProperty(r, $jscomp.propertyToPolyfillSymbol[u], {
        configurable: !0,
        writable: !0,
        value: t
    })))
}
,
$jscomp.initSymbol = function() {}
,
$jscomp.polyfill("Symbol", function(n) {
    var t;
    if (n)
        return n;
    t = function(n, t) {
        this.$jscomp$symbol$id_ = n;
        $jscomp.defineProperty(this, "description", {
            configurable: !0,
            writable: !0,
            value: t
        })
    }
    ;
    t.prototype.toString = function() {
        return this.$jscomp$symbol$id_
    }
    ;
    var r = "jscomp_symbol_" + (1e9 * Math.random() >>> 0) + "_"
      , u = 0
      , i = function(n) {
        if (this instanceof i)
            throw new TypeError("Symbol is not a constructor");
        return new t(r + (n || "") + "_" + u++,n)
    };
    return i
}, "es6", "es3"),
$jscomp.polyfill("Symbol.iterator", function(n) {
    var r, t, i;
    if (n)
        return n;
    for (n = Symbol("Symbol.iterator"),
    r = "Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),
    t = 0; t < r.length; t++)
        i = $jscomp.global[r[t]],
        "function" == typeof i && "function" != typeof i.prototype[n] && $jscomp.defineProperty(i.prototype, n, {
            configurable: !0,
            writable: !0,
            value: function() {
                return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))
            }
        });
    return n
}, "es6", "es3"),
$jscomp.iteratorPrototype = function(n) {
    return n = {
        next: n
    },
    n[Symbol.iterator] = function() {
        return this
    }
    ,
    n
}
,
Array.from || (Array.from = function() {
    var t = Object.prototype.toString
      , n = function(n) {
        return "function" == typeof n || "[object Function]" === t.call(n)
    }
      , i = Math.pow(2, 53) - 1;
    return function(t) {
        var h = Object(t), f, s, r, e, u, o;
        if (null == t)
            throw new TypeError("Array.from requires an array-like object - not null or undefined");
        if (f = 1 < arguments.length ? arguments[1] : void 0,
        "undefined" != typeof f) {
            if (!n(f))
                throw new TypeError("Array.from: when provided, the second argument must be a function");
            2 < arguments.length && (s = arguments[2])
        }
        for (r = Number(h.length),
        r = isNaN(r) ? 0 : 0 !== r && isFinite(r) ? (0 < r ? 1 : -1) * Math.floor(Math.abs(r)) : r,
        r = Math.min(Math.max(r, 0), i),
        e = n(this) ? Object(new this(r)) : Array(r),
        u = 0; u < r; )
            o = h[u],
            e[u] = f ? "undefined" == typeof s ? f(o, u) : f.call(s, o, u) : o,
            u += 1;
        return e.length = r,
        e
    }
}()),
isNaN || (isNaN = function(n) {
    return n = Number(n),
    n !== n
}
),
function(n, t) {
    "object" == typeof exports && "undefined" != typeof module ? t() : "function" == typeof define && define.amd ? define(t) : t()
}(this, function() {
    function n(t) {
        return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(n) {
            return typeof n
        }
        : function(n) {
            return n && "function" == typeof Symbol && n.constructor === Symbol && n !== Symbol.prototype ? "symbol" : typeof n
        }
        ,
        n(t)
    }
    function t(n, t) {
        var r = this.event && this.event.type, i;
        r = "unload" === r || "beforeunload" === r;
        i = "XMLHttpRequest"in this ? new XMLHttpRequest : new ActiveXObject("Microsoft.XMLHTTP");
        i.open("POST", n, !r);
        i.withCredentials = !0;
        i.setRequestHeader("Accept", "*/*");
        "string" == typeof t ? (i.setRequestHeader("Content-Type", "text/plain;charset=UTF-8"),
        i.responseType = "text") : t instanceof Blob && t.type && i.setRequestHeader("Content-Type", t.type);
        try {
            i.send(t)
        } catch (u) {
            return !1
        }
        return !0
    }
    (function() {
        "navigator"in this || (this.navigator = {});
        "function" != typeof this.navigator.sendBeacon && (this.navigator.sendBeacon = t.bind(this))
    }
    ).call("object" === ("undefined" == typeof window ? "undefined" : n(window)) ? window : {})
}),
"undefined" != typeof responsiveVoice || (ResponsiveVoice = function() {
    function u(n) {
        n = n.replace(/([\n\r])+/gm, "\n");
        for (var t = /([,.:!\u00a1?\u00bf;()\[\]\u2014\u00ab\u00bb])+[\n\r]/gm, i = !0; i; )
            null === n.match(t) ? i = !1 : n = n.replace(t, "$1 ");
        return n
    }
    function f(n, i) {
        var f, e, s, r;
        if (!t)
            return n;
        f = n;
        try {
            for (e = 0; e < t.length; e++) {
                var o = t[e]
                  , h = !1
                  , u = o.collectionvoices;
                u ? (Array.isArray(u) || (u = [u]),
                i.collectionvoice && i.collectionvoice.name && -1 != u.indexOf(i.collectionvoice.name) && (h = !0)) : h = !0;
                s = !1;
                r = o.systemvoices;
                r ? (Array.isArray(r) || (r = [r]),
                i.systemvoice && i.systemvoice.name && -1 != r.indexOf(i.systemvoice.name) && (s = !0)) : s = !0;
                (null == u || null != u && h) && (null == r || null != r && s) && (f = f.replace(o.searchvalue, o.newvalue))
            }
            return f
        } catch (c) {
            return console.warn("ResponsiveVoice: There was an error while processing the textReplacements array"),
            n
        }
    }
    function e() {
        for (var f = document.getElementsByTagName("script"), e, t = 0; t < f.length; ++t)
            if (f[t].src && i.test(f[t].src)) {
                var u = f[t].src
                  , r = document.createElement("a")
                  , n = {};
                if (r.href = u,
                r.search) {
                    for (e = r.search.replace(/^\?/, "").split("&"),
                    u = 0; u < e.length; u++)
                        r = e[u].split("="),
                        n[r[0]] = r[1];
                    n = n.source ? n.source : !1
                } else
                    n = !1;
                if (n && "wp-plugin" == n)
                    return i.lastIndex = 0,
                    !0
            }
        return !1
    }
    function o() {
        for (var t = document.getElementsByTagName("script"), n = 0; n < t.length; ++n)
            if (t[n].src && i.test(t[n].src))
                return i.lastIndex = 0,
                !1;
        return !0
    }
    var n = this, t, r, i;
    n.version = "1.8.3";
    n.responsivevoices = [{
        name: "UK English Female",
        flag: "gb",
        gender: "f",
        lang: "en-GB",
        voiceIDs: [3, 7, 171, 201, 5, 1, 528, 257, 286, 342, 258, 287, 343, 8]
    }, {
        name: "UK English Male",
        flag: "gb",
        gender: "m",
        lang: "en-GB",
        voiceIDs: [0, 277, 202, 75, 4, 2, 256, 285, 341, 159]
    }, {
        name: "US English Female",
        flag: "us",
        gender: "f",
        lang: "en-US",
        voiceIDs: [432, 433, 434, 40, 41, 42, 383, 205, 204, 43, 481, 173, 235, 283, 339, 408, 44]
    }, {
        name: "US English Male",
        flag: "us",
        gender: "m",
        lang: "en-US",
        voiceIDs: [431, 39, 234, 282, 338, 236, 284, 340, 2, 4, 0, 75, 195, 169]
    }, {
        name: "Arabic Male",
        flag: "ar",
        gender: "m",
        lang: "ar-SA",
        voiceIDs: [96, 95, 97, 196, 388]
    }, {
        name: "Arabic Female",
        flag: "ar",
        gender: "f",
        lang: "ar-SA",
        voiceIDs: [483, 98]
    }, {
        name: "Armenian Male",
        flag: "hy",
        gender: "f",
        lang: "hy-AM",
        voiceIDs: [99]
    }, {
        name: "Australian Female",
        flag: "au",
        gender: "f",
        lang: "en-AU",
        voiceIDs: [495, 415, 276, 201, 87, 5, 88]
    }, {
        name: "Australian Male",
        flag: "au",
        gender: "m",
        lang: "en-AU",
        voiceIDs: [86, 386]
    }, {
        name: "Bangla Bangladesh Female",
        flag: "bd",
        gender: "f",
        lang: "bn-BD",
        voiceIDs: [435]
    }, {
        name: "Bangla Bangladesh Male",
        flag: "bd",
        gender: "m",
        lang: "bn-BD",
        voiceIDs: [485, 410, 436]
    }, {
        name: "Bangla India Female",
        flag: "bd",
        gender: "f",
        lang: "bn-IN",
        voiceIDs: [447]
    }, {
        name: "Bangla India Male",
        flag: "bd",
        gender: "m",
        lang: "bn-IN",
        voiceIDs: [492, 411, 448]
    }, {
        name: "Brazilian Portuguese Female",
        flag: "br",
        gender: "f",
        lang: "pt-BR",
        voiceIDs: [245, 124, 123, 125, 499, 186, 223, 126]
    }, {
        name: "Brazilian Portuguese Male",
        flag: "br",
        gender: "m",
        lang: "pt-BR",
        voiceIDs: [315, 332, 371, 399],
        deprecated: !0
    }, {
        name: "Chinese Female",
        flag: "cn",
        gender: "f",
        lang: "zh-CN",
        voiceIDs: [249, 58, 59, 452, 380, 281, 231, 155, 60, 513, 191, 268, 297, 353, 269, 298, 354, 409, 61]
    }, {
        name: "Chinese Male",
        flag: "cn",
        gender: "m",
        lang: "zh-CN",
        voiceIDs: [317, 334, 373, 389]
    }, {
        name: "Chinese (Hong Kong) Female",
        flag: "hk",
        gender: "f",
        lang: "zh-HK",
        voiceIDs: [463, 464, 192, 193, 232, 250, 251, 270, 299, 355, 409, 444, 252]
    }, {
        name: "Chinese (Hong Kong) Male",
        flag: "hk",
        gender: "m",
        lang: "zh-HK",
        voiceIDs: [430, 318, 335, 374, 445, 390]
    }, {
        name: "Chinese Taiwan Female",
        flag: "tw",
        gender: "f",
        lang: "zh-TW",
        voiceIDs: [469, 194, 233, 253, 254, 305, 322, 361, 384, 319, 336, 375, 409, 255]
    }, {
        name: "Chinese Taiwan Male",
        flag: "tw",
        gender: "m",
        lang: "zh-TW",
        voiceIDs: [320, 337, 376, 391]
    }, {
        name: "Czech Female",
        flag: "cz",
        gender: "f",
        lang: "cs-CZ",
        voiceIDs: [504, 412, 101, 100, 102, 197, 103]
    }, {
        name: "Czech Male",
        flag: "cz",
        gender: "m",
        lang: "cs-CZ",
        voiceIDs: [161],
        deprecated: !0
    }, {
        name: "Danish Female",
        flag: "dk",
        gender: "f",
        lang: "da-DK",
        voiceIDs: [474, 413, 105, 104, 106, 198, 107]
    }, {
        name: "Danish Male",
        flag: "da",
        gender: "m",
        lang: "da-DK",
        voiceIDs: [162],
        deprecated: !0
    }, {
        name: "Deutsch Female",
        flag: "de",
        gender: "f",
        lang: "de-DE",
        voiceIDs: [27, 28, 29, 30, 78, 170, 275, 199, 31, 502, 261, 290, 346, 262, 291, 347, 32]
    }, {
        name: "Deutsch Male",
        flag: "de",
        gender: "m",
        lang: "de-DE",
        voiceIDs: [307, 324, 363, 377, 393]
    }, {
        name: "Dutch Female",
        flag: "nl",
        gender: "f",
        lang: "nl-NL",
        voiceIDs: [243, 219, 84, 157, 158, 496, 184, 45]
    }, {
        name: "Dutch Male",
        flag: "nl",
        gender: "m",
        lang: "nl-NL",
        voiceIDs: [157, 220, 407]
    }, {
        name: "Estonian Male",
        flag: "ee",
        gender: "m",
        lang: "et-EE",
        voiceIDs: [476, 416, 446]
    }, {
        name: "Filipino Female",
        flag: "ph",
        gender: "f",
        lang: "fil-PH",
        voiceIDs: [507, 418, 437]
    }, {
        name: "Finnish Female",
        flag: "fi",
        gender: "f",
        lang: "fi-FI",
        voiceIDs: [490, 417, 90, 89, 91, 209, 92]
    }, {
        name: "Finnish Male",
        flag: "fi",
        gender: "m",
        lang: "fi-FI",
        voiceIDs: [160],
        deprecated: !0
    }, {
        name: "French Female",
        flag: "fr",
        gender: "f",
        lang: "fr-FR",
        voiceIDs: [240, 21, 22, 23, 77, 178, 279, 210, 493, 266, 295, 351, 304, 321, 360, 26]
    }, {
        name: "French Male",
        flag: "fr",
        gender: "m",
        lang: "fr-FR",
        voiceIDs: [311, 328, 367, 378, 392]
    }, {
        name: "French Canadian Female",
        flag: "ca",
        gender: "f",
        lang: "fr-CA",
        voiceIDs: [497, 419, 210, 449]
    }, {
        name: "French Canadian Male",
        flag: "ca",
        gender: "m",
        lang: "fr-CA",
        voiceIDs: [450]
    }, {
        name: "Greek Female",
        flag: "gr",
        gender: "f",
        lang: "el-GR",
        voiceIDs: [488, 414, 62, 63, 80, 200, 64]
    }, {
        name: "Greek Male",
        flag: "gr",
        gender: "m",
        lang: "el-GR",
        voiceIDs: [163],
        deprecated: !0
    }, {
        name: "Hindi Female",
        flag: "hi",
        gender: "f",
        lang: "hi-IN",
        voiceIDs: [247, 66, 154, 179, 213, 489, 259, 288, 344, 67]
    }, {
        name: "Hindi Male",
        flag: "hi",
        gender: "m",
        lang: "hi-IN",
        voiceIDs: [394]
    }, {
        name: "Hungarian Female",
        flag: "hu",
        gender: "f",
        lang: "hu-HU",
        voiceIDs: [470, 420, 9, 10, 81, 214, 11]
    }, {
        name: "Hungarian Male",
        flag: "hu",
        gender: "m",
        lang: "hu-HU",
        voiceIDs: [164],
        deprecated: !0
    }, {
        name: "Indonesian Female",
        flag: "id",
        gender: "f",
        lang: "id-ID",
        voiceIDs: [241, 111, 112, 524, 180, 215, 113]
    }, {
        name: "Indonesian Male",
        flag: "id",
        gender: "m",
        lang: "id-ID",
        voiceIDs: [395]
    }, {
        name: "Italian Female",
        flag: "it",
        gender: "f",
        lang: "it-IT",
        voiceIDs: [242, 33, 34, 35, 36, 37, 79, 181, 216, 508, 271, 300, 356, 38]
    }, {
        name: "Italian Male",
        flag: "it",
        gender: "m",
        lang: "it-IT",
        voiceIDs: [312, 329, 368, 406]
    }, {
        name: "Japanese Female",
        flag: "jp",
        gender: "f",
        lang: "ja-JP",
        voiceIDs: [51, 280, 217, 52, 153, 517, 182, 273, 302, 358, 274, 303, 359, 53]
    }, {
        name: "Japanese Male",
        flag: "jp",
        gender: "m",
        lang: "ja-JP",
        voiceIDs: [248, 50, 313, 330, 369, 396]
    }, {
        name: "Korean Female",
        flag: "kr",
        gender: "f",
        lang: "ko-KR",
        voiceIDs: [54, 55, 56, 156, 183, 218, 466, 306, 323, 362, 384, 57]
    }, {
        name: "Korean Male",
        flag: "kr",
        gender: "m",
        lang: "ko-KR",
        voiceIDs: [397]
    }, {
        name: "Latin Female",
        flag: "va",
        gender: "f",
        lang: "la",
        voiceIDs: [114],
        deprecated: !0
    }, {
        name: "Latin Male",
        flag: "va",
        gender: "m",
        lang: "la",
        voiceIDs: [165]
    }, {
        name: "Nepali",
        flag: "np",
        gender: "f",
        lang: "ne-NP",
        voiceIDs: [509, 423, 441]
    }, {
        name: "Norwegian Female",
        flag: "no",
        gender: "f",
        lang: "nb-NO",
        voiceIDs: [473, 422, 72, 73, 221, 74]
    }, {
        name: "Norwegian Male",
        flag: "no",
        gender: "m",
        lang: "nb-NO",
        voiceIDs: [166]
    }, {
        name: "Polish Female",
        flag: "pl",
        gender: "f",
        lang: "pl-PL",
        voiceIDs: [244, 120, 119, 121, 185, 222, 505, 267, 296, 352, 122]
    }, {
        name: "Polish Male",
        flag: "pl",
        gender: "m",
        lang: "pl-PL",
        voiceIDs: [314, 331, 370, 398]
    }, {
        name: "Portuguese Female",
        flag: "br",
        gender: "f",
        lang: "pt-BR",
        voiceIDs: [128, 127, 129, 187, 224, 479, 272, 301, 357, 130]
    }, {
        name: "Portuguese Male",
        flag: "br",
        gender: "m",
        lang: "pt-BR",
        voiceIDs: [400]
    }, {
        name: "Romanian Female",
        flag: "ro",
        gender: "f",
        lang: "ro-RO",
        voiceIDs: [526, 424, 151, 150, 152, 225, 46]
    }, {
        name: "Russian Female",
        flag: "ru",
        gender: "f",
        lang: "ru-RU",
        voiceIDs: [246, 47, 48, 83, 468, 188, 226, 260, 289, 345, 49]
    }, {
        name: "Russian Male",
        flag: "ru",
        gender: "m",
        lang: "ru-RU",
        voiceIDs: [316, 333, 372, 387],
        deprecated: !0
    }, {
        name: "Sinhala",
        flag: "lk",
        gender: "f",
        lang: "si-LK",
        voiceIDs: [501, 425, 442]
    }, {
        name: "Slovak Female",
        flag: "sk",
        gender: "f",
        lang: "sk-SK",
        voiceIDs: [506, 426, 133, 132, 134, 227, 135]
    }, {
        name: "Slovak Male",
        flag: "sk",
        gender: "m",
        lang: "sk-SK",
        voiceIDs: [167],
        deprecated: !0
    }, {
        name: "Spanish Female",
        flag: "es",
        gender: "f",
        lang: "es-ES",
        voiceIDs: [19, 238, 16, 17, 18, 20, 76, 174, 207, 514, 521, 263, 292, 348, 264, 293, 349, 15]
    }, {
        name: "Spanish Male",
        flag: "es",
        gender: "m",
        lang: "es-ES",
        voiceIDs: [309, 326, 365, 401],
        deprecated: !0
    }, {
        name: "Spanish Latin American Female",
        flag: "es",
        gender: "f",
        lang: "es-MX",
        voiceIDs: [239, 137, 136, 138, 175, 208, 265, 294, 350, 139]
    }, {
        name: "Spanish Latin American Male",
        flag: "es",
        gender: "m",
        lang: "es-MX",
        voiceIDs: [136, 310, 327, 366, 402]
    }, {
        name: "Swedish Female",
        flag: "sv",
        gender: "f",
        lang: "sv-SE",
        voiceIDs: [482, 427, 85, 149, 228, 65]
    }, {
        name: "Swedish Male",
        flag: "sv",
        gender: "m",
        lang: "sv-SE",
        voiceIDs: [148, 168]
    }, {
        name: "Tamil Female",
        flag: "hi",
        gender: "m",
        lang: "hi-IN",
        voiceIDs: [458, 516, 451]
    }, {
        name: "Tamil Male",
        flag: "hi",
        gender: "m",
        lang: "hi-IN",
        voiceIDs: [141]
    }, {
        name: "Thai Female",
        flag: "th",
        gender: "f",
        lang: "th-TH",
        voiceIDs: [143, 142, 144, 471, 189, 229, 145]
    }, {
        name: "Thai Male",
        flag: "th",
        gender: "m",
        lang: "th-TH",
        voiceIDs: [403]
    }, {
        name: "Turkish Female",
        flag: "tr",
        gender: "f",
        lang: "tr-TR",
        voiceIDs: [69, 70, 82, 475, 190, 230, 71]
    }, {
        name: "Turkish Male",
        flag: "tr",
        gender: "m",
        lang: "tr-TR",
        voiceIDs: [465, 404]
    }, {
        name: "Ukrainian Female",
        flag: "ua",
        gender: "f",
        lang: "uk-UA",
        voiceIDs: [494, 428, 443]
    }, {
        name: "Vietnamese Female",
        flag: "vi",
        gender: "f",
        lang: "vi-VN",
        voiceIDs: [480, 429, 405]
    }, {
        name: "Vietnamese Male",
        flag: "vi",
        gender: "m",
        lang: "vi-VN",
        voiceIDs: [146]
    }, {
        name: "Afrikaans Male",
        flag: "af",
        gender: "m",
        lang: "af-ZA",
        voiceIDs: [93]
    }, {
        name: "Albanian Male",
        flag: "sq",
        gender: "m",
        lang: "sq-AL",
        voiceIDs: [94]
    }, {
        name: "Bosnian Male",
        flag: "bs",
        gender: "m",
        lang: "bs",
        voiceIDs: [14]
    }, {
        name: "Catalan Male",
        flag: "catalonia",
        gender: "m",
        lang: "ca-ES",
        voiceIDs: [68]
    }, {
        name: "Croatian Male",
        flag: "hr",
        gender: "m",
        lang: "hr-HR",
        voiceIDs: [13]
    }, {
        name: "Esperanto Male",
        flag: "eo",
        gender: "m",
        lang: "eo",
        voiceIDs: [108]
    }, {
        name: "Icelandic Male",
        flag: "is",
        gender: "m",
        lang: "is-IS",
        voiceIDs: [110],
        deprecated: !0
    }, {
        name: "Icelandic Female",
        flag: "is",
        gender: "m",
        lang: "is-IS",
        voiceIDs: [110]
    }, {
        name: "Latvian Male",
        flag: "lv",
        gender: "m",
        lang: "lv-LV",
        voiceIDs: [115]
    }, {
        name: "Macedonian Male",
        flag: "mk",
        gender: "m",
        lang: "mk-MK",
        voiceIDs: [116]
    }, {
        name: "Moldavian Female",
        flag: "md",
        gender: "f",
        lang: "md",
        voiceIDs: [117]
    }, {
        name: "Moldavian Male",
        flag: "md",
        gender: "m",
        lang: "md",
        voiceIDs: [117],
        deprecated: !0
    }, {
        name: "Montenegrin Male",
        flag: "me",
        gender: "m",
        lang: "me",
        voiceIDs: [118]
    }, {
        name: "Serbian Male",
        flag: "sr",
        gender: "m",
        lang: "sr-RS",
        voiceIDs: [12]
    }, {
        name: "Serbo-Croatian Male",
        flag: "hr",
        gender: "m",
        lang: "hr-HR",
        voiceIDs: [131]
    }, {
        name: "Swahili Male",
        flag: "sw",
        gender: "m",
        lang: "sw-KE",
        voiceIDs: [140]
    }, {
        name: "Welsh Male",
        flag: "cy",
        gender: "m",
        lang: "cy",
        voiceIDs: [147]
    }, {
        name: "Fallback UK Female",
        flag: "gb",
        gender: "f",
        lang: "en-GB",
        voiceIDs: [8]
    }];
    n.voicecollection = [{
        name: "Google UK English Male"
    }, {
        name: "Agnes"
    }, {
        name: "Daniel Compact"
    }, {
        name: "Google UK English Female"
    }, {
        name: "en-GB",
        rate: .25,
        pitch: 1
    }, {
        name: "en-AU",
        rate: .25,
        pitch: 1
    }, {
        name: "inglés Reino Unido"
    }, {
        name: "English United Kingdom"
    }, {
        name: "Fallback en-GB Female",
        lang: "en-GB",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Eszter Compact"
    }, {
        name: "hu-HU",
        rate: .4
    }, {
        name: "Fallback Hungarian Female",
        lang: "hu",
        fallbackvoice: !0,
        service: "g1"
    }, {
        name: "Fallback Serbian Male",
        lang: "sr",
        fallbackvoice: !0,
        service: "g1",
        gender: "male"
    }, {
        name: "Fallback Croatian Male",
        lang: "hr",
        rate: .5,
        fallbackvoice: !0,
        service: "g2",
        gender: "male"
    }, {
        name: "Fallback Bosnian Male",
        lang: "bs",
        fallbackvoice: !0,
        service: "g2",
        gender: "male"
    }, {
        name: "Fallback Spanish Female",
        lang: "es",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Spanish Spain"
    }, {
        name: "español España"
    }, {
        name: "Diego Compact",
        rate: .3
    }, {
        name: "Google Español"
    }, {
        name: "es-ES",
        rate: .2
    }, {
        name: "Google Français"
    }, {
        name: "French France"
    }, {
        name: "francés Francia"
    }, {
        name: "Virginie Compact",
        rate: .5
    }, {
        name: "fr-FR",
        rate: .25
    }, {
        name: "Fallback French Female",
        lang: "fr",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Google Deutsch"
    }, {
        name: "German Germany"
    }, {
        name: "alemán Alemania"
    }, {
        name: "Yannick Compact",
        rate: .5
    }, {
        name: "de-DE",
        rate: .25
    }, {
        name: "Fallback Deutsch Female",
        lang: "de",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Google Italiano"
    }, {
        name: "Italian Italy"
    }, {
        name: "italiano Italia"
    }, {
        name: "Paolo Compact",
        rate: .5
    }, {
        name: "it-IT",
        rate: .25
    }, {
        name: "Fallback Italian Female",
        lang: "it",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Google US English",
        timerSpeed: 1
    }, {
        name: "English United States"
    }, {
        name: "inglés Estados Unidos"
    }, {
        name: "Vicki"
    }, {
        name: "en-US",
        rate: .2,
        pitch: 1,
        timerSpeed: 1.3
    }, {
        name: "Fallback US English",
        lang: "en-US",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g1",
        gender: "female"
    }, {
        name: "Fallback Dutch Female",
        lang: "nl",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g1",
        gender: "female"
    }, {
        name: "Fallback Romanian",
        lang: "ro",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Milena Compact"
    }, {
        name: "ru-RU",
        rate: .25
    }, {
        name: "Fallback Russian",
        lang: "ru",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Google 日本人",
        timerSpeed: 1
    }, {
        name: "Kyoko Compact"
    }, {
        name: "ja-JP",
        rate: .25
    }, {
        name: "Fallback Japanese Female",
        lang: "ja",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Google 한국의",
        timerSpeed: 1
    }, {
        name: "Narae Compact"
    }, {
        name: "ko-KR",
        rate: .25
    }, {
        name: "Fallback Korean Female",
        lang: "ko",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Google 中国的",
        timerSpeed: 1
    }, {
        name: "Ting-Ting Compact"
    }, {
        name: "zh-CN",
        rate: .25
    }, {
        name: "Fallback Chinese",
        lang: "zh-CN",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Alexandros Compact"
    }, {
        name: "el-GR",
        rate: .25
    }, {
        name: "Fallback Greek",
        lang: "el",
        fallbackvoice: !0,
        service: "g3",
        gender: "female"
    }, {
        name: "Fallback Swedish",
        lang: "sv",
        fallbackvoice: !0,
        service: "g3",
        gender: "female"
    }, {
        name: "hi-IN",
        rate: .25
    }, {
        name: "Fallback Hindi Female",
        lang: "hi",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Fallback Catalan",
        lang: "ca",
        fallbackvoice: !0,
        service: "g1",
        gender: "male"
    }, {
        name: "Aylin Compact"
    }, {
        name: "tr-TR",
        rate: .25
    }, {
        name: "Fallback Turkish",
        lang: "tr",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Stine Compact"
    }, {
        name: "no-NO",
        rate: .25
    }, {
        name: "Fallback Norwegian",
        lang: "no",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Daniel"
    }, {
        name: "Monica"
    }, {
        name: "Amelie"
    }, {
        name: "Anna"
    }, {
        name: "Alice"
    }, {
        name: "Melina"
    }, {
        name: "Mariska"
    }, {
        name: "Yelda"
    }, {
        name: "Milena"
    }, {
        name: "Xander"
    }, {
        name: "Alva"
    }, {
        name: "Lee Compact"
    }, {
        name: "Karen"
    }, {
        name: "Fallback Australian Female",
        lang: "en-AU",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Mikko Compact"
    }, {
        name: "Satu"
    }, {
        name: "fi-FI",
        rate: .25
    }, {
        name: "Fallback Finnish",
        lang: "fi",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Fallback Afrikans",
        lang: "af",
        fallbackvoice: !0,
        service: "g1",
        gender: "male"
    }, {
        name: "Fallback Albanian",
        lang: "sq",
        fallbackvoice: !0,
        service: "g2",
        gender: "male"
    }, {
        name: "Maged Compact"
    }, {
        name: "Tarik"
    }, {
        name: "ar-SA",
        rate: .25
    }, {
        name: "Fallback Arabic",
        lang: "ar",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Fallback Armenian",
        lang: "hy",
        fallbackvoice: !0,
        service: "g5",
        gender: "male"
    }, {
        name: "Zuzana Compact"
    }, {
        name: "Zuzana"
    }, {
        name: "cs-CZ",
        rate: .25
    }, {
        name: "Fallback Czech",
        lang: "cs",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Ida Compact"
    }, {
        name: "Sara"
    }, {
        name: "da-DK",
        rate: .25
    }, {
        name: "Fallback Danish",
        lang: "da",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Fallback Esperanto",
        lang: "eo",
        fallbackvoice: !0,
        service: "g5",
        gender: "male"
    }, {
        name: "Fallback Haitian Creole",
        lang: "ht",
        fallbackvoice: !0
    }, {
        name: "Fallback Icelandic",
        lang: "is",
        fallbackvoice: !0,
        service: "g1",
        gender: "male"
    }, {
        name: "Damayanti"
    }, {
        name: "id-ID",
        rate: .25
    }, {
        name: "Fallback Indonesian Female",
        lang: "id",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Fallback Latin Female",
        lang: "la",
        fallbackvoice: !0,
        service: "g2",
        gender: "female"
    }, {
        name: "Fallback Latvian Male",
        lang: "lv",
        fallbackvoice: !0,
        service: "g1",
        gender: "male"
    }, {
        name: "Fallback Macedonian Male",
        lang: "mk",
        fallbackvoice: !0,
        service: "g5",
        gender: "male"
    }, {
        name: "Fallback Moldavian Female",
        lang: "mo",
        fallbackvoice: !0,
        service: "g2",
        gender: "female"
    }, {
        name: "Fallback Montenegrin Male",
        lang: "sr-ME",
        fallbackvoice: !0,
        service: "g1",
        gender: "male"
    }, {
        name: "Agata Compact"
    }, {
        name: "Zosia"
    }, {
        name: "pl-PL",
        rate: .25
    }, {
        name: "Fallback Polish Female",
        lang: "pl",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Raquel Compact"
    }, {
        name: "Luciana"
    }, {
        name: "pt-BR",
        rate: .25
    }, {
        name: "Fallback Brazilian Portuguese Female",
        lang: "pt-BR",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Joana Compact"
    }, {
        name: "Joana"
    }, {
        name: "pt-PT",
        rate: .25
    }, {
        name: "Fallback Portuguese",
        lang: "pt-PT",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Fallback Serbo-Croation",
        lang: "sh",
        fallbackvoice: !0,
        service: "g2",
        gender: "male"
    }, {
        name: "Laura Compact"
    }, {
        name: "Laura"
    }, {
        name: "sk-SK",
        rate: .25
    }, {
        name: "Fallback Slovak",
        lang: "sk",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Javier Compact"
    }, {
        name: "Paulina"
    }, {
        name: "es-MX",
        rate: .25
    }, {
        name: "Fallback Spanish (Latin American) Female",
        lang: "es-419",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Fallback Swahili",
        lang: "sw",
        fallbackvoice: !0,
        service: "g2",
        gender: "male"
    }, {
        name: "Fallback Tamil",
        lang: "ta",
        fallbackvoice: !0,
        service: "g1",
        gender: "male"
    }, {
        name: "Narisa Compact"
    }, {
        name: "Kanya"
    }, {
        name: "th-TH",
        rate: .25
    }, {
        name: "Fallback Thai Female",
        lang: "th",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Fallback Vietnamese Male",
        lang: "vi",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Welsh",
        lang: "cy",
        fallbackvoice: !0,
        service: "g5",
        gender: "male"
    }, {
        name: "Oskar Compact"
    }, {
        name: "sv-SE",
        rate: .25
    }, {
        name: "Simona Compact"
    }, {
        name: "Ioana"
    }, {
        name: "ro-RO",
        rate: .25
    }, {
        name: "Kyoko"
    }, {
        name: "Lekha"
    }, {
        name: "Ting-Ting"
    }, {
        name: "Yuna"
    }, {
        name: "Xander Compact"
    }, {
        name: "nl-NL",
        rate: .25
    }, {
        name: "Fallback UK English Male",
        lang: "en-GB",
        fallbackvoice: !0,
        service: "g1",
        voicename: "rjs",
        gender: "male"
    }, {
        name: "Finnish Male",
        lang: "fi",
        fallbackvoice: !0,
        service: "g3",
        voicename: "",
        gender: "male",
        deprecated: !0
    }, {
        name: "Czech Male",
        lang: "cs",
        fallbackvoice: !0,
        service: "g3",
        voicename: "",
        gender: "male",
        deprecated: !0
    }, {
        name: "Danish Male",
        lang: "da",
        fallbackvoice: !0,
        service: "g3",
        voicename: "",
        gender: "male",
        deprecated: !0
    }, {
        name: "Greek Male",
        lang: "el",
        fallbackvoice: !0,
        service: "g3",
        voicename: "",
        gender: "male",
        deprecated: !0
    }, {
        name: "Hungarian Male",
        lang: "hu",
        fallbackvoice: !0,
        service: "g3",
        voicename: "",
        gender: "male",
        deprecated: !0
    }, {
        name: "Latin Male",
        lang: "la",
        fallbackvoice: !0,
        service: "g2",
        voicename: "",
        gender: "male"
    }, {
        name: "Norwegian Male",
        lang: "no",
        fallbackvoice: !0,
        service: "g3",
        voicename: "",
        gender: "male"
    }, {
        name: "Slovak Male",
        lang: "sk",
        fallbackvoice: !0,
        service: "g3",
        voicename: "",
        gender: "male",
        deprecated: !0
    }, {
        name: "Swedish Male",
        lang: "sv",
        fallbackvoice: !0,
        service: "g3",
        voicename: "",
        gender: "male"
    }, {
        name: "Fallback US English Male",
        lang: "en-US",
        fallbackvoice: !0,
        service: "g3",
        voicename: "",
        gender: "male"
    }, {
        name: "German Germany",
        lang: "de_DE"
    }, {
        name: "English United Kingdom",
        lang: "en_GB"
    }, {
        name: "English India",
        lang: "en_IN"
    }, {
        name: "English United States",
        lang: "en_US"
    }, {
        name: "Spanish Spain",
        lang: "es_ES"
    }, {
        name: "Spanish Mexico",
        lang: "es_MX"
    }, {
        name: "Spanish United States",
        lang: "es_US"
    }, {
        name: "French Belgium",
        lang: "fr_BE"
    }, {
        name: "French France",
        lang: "fr_FR"
    }, {
        name: "Hindi India",
        lang: "hi_IN"
    }, {
        name: "Indonesian Indonesia",
        lang: "in_ID"
    }, {
        name: "Italian Italy",
        lang: "it_IT"
    }, {
        name: "Japanese Japan",
        lang: "ja_JP"
    }, {
        name: "Korean South Korea",
        lang: "ko_KR"
    }, {
        name: "Dutch Netherlands",
        lang: "nl_NL"
    }, {
        name: "Polish Poland",
        lang: "pl_PL"
    }, {
        name: "Portuguese Brazil",
        lang: "pt_BR"
    }, {
        name: "Portuguese Portugal",
        lang: "pt_PT"
    }, {
        name: "Russian Russia",
        lang: "ru_RU"
    }, {
        name: "Thai Thailand",
        lang: "th_TH"
    }, {
        name: "Turkish Turkey",
        lang: "tr_TR"
    }, {
        name: "Chinese China",
        lang: "zh_CN_#Hans"
    }, {
        name: "Chinese Hong Kong",
        lang: "zh_HK_#Hans"
    }, {
        name: "Chinese Hong Kong",
        lang: "zh_HK_#Hant"
    }, {
        name: "Chinese Taiwan",
        lang: "zh_TW_#Hant"
    }, {
        name: "Alex"
    }, {
        name: "Maged",
        lang: "ar-SA"
    }, {
        name: "Zuzana",
        lang: "cs-CZ"
    }, {
        name: "Sara",
        lang: "da-DK"
    }, {
        name: "Anna",
        lang: "de-DE"
    }, {
        name: "Melina",
        lang: "el-GR"
    }, {
        name: "Karen",
        lang: "en-AU"
    }, {
        name: "Daniel",
        lang: "en-GB"
    }, {
        name: "Moira",
        lang: "en-IE"
    }, {
        name: "Samantha (Enhanced)",
        lang: "en-US"
    }, {
        name: "Samantha",
        lang: "en-US"
    }, {
        name: "Tessa",
        lang: "en-ZA"
    }, {
        name: "Monica",
        lang: "es-ES"
    }, {
        name: "Paulina",
        lang: "es-MX"
    }, {
        name: "Satu",
        lang: "fi-FI"
    }, {
        name: "Amelie",
        lang: "fr-CA"
    }, {
        name: "Thomas",
        lang: "fr-FR"
    }, {
        name: "Carmit",
        lang: "he-IL"
    }, {
        name: "Lekha",
        lang: "hi-IN"
    }, {
        name: "Mariska",
        lang: "hu-HU"
    }, {
        name: "Damayanti",
        lang: "id-ID"
    }, {
        name: "Alice",
        lang: "it-IT"
    }, {
        name: "Kyoko",
        lang: "ja-JP"
    }, {
        name: "Yuna",
        lang: "ko-KR"
    }, {
        name: "Ellen",
        lang: "nl-BE"
    }, {
        name: "Xander",
        lang: "nl-NL"
    }, {
        name: "Nora",
        lang: "no-NO"
    }, {
        name: "Zosia",
        lang: "pl-PL"
    }, {
        name: "Luciana",
        lang: "pt-BR"
    }, {
        name: "Joana",
        lang: "pt-PT"
    }, {
        name: "Ioana",
        lang: "ro-RO"
    }, {
        name: "Milena",
        lang: "ru-RU"
    }, {
        name: "Laura",
        lang: "sk-SK"
    }, {
        name: "Alva",
        lang: "sv-SE"
    }, {
        name: "Kanya",
        lang: "th-TH"
    }, {
        name: "Yelda",
        lang: "tr-TR"
    }, {
        name: "Ting-Ting",
        lang: "zh-CN"
    }, {
        name: "Sin-Ji",
        lang: "zh-HK"
    }, {
        name: "Mei-Jia",
        lang: "zh-TW"
    }, {
        name: "Microsoft David Mobile - English (United States)",
        lang: "en-US"
    }, {
        name: "Microsoft Zira Mobile - English (United States)",
        lang: "en-US"
    }, {
        name: "Microsoft Mark Mobile - English (United States)",
        lang: "en-US"
    }, {
        name: "native",
        lang: ""
    }, {
        name: "Google español"
    }, {
        name: "Google español de Estados Unidos"
    }, {
        name: "Google français"
    }, {
        name: "Google Bahasa Indonesia"
    }, {
        name: "Google italiano"
    }, {
        name: "Google Nederlands"
    }, {
        name: "Google polski"
    }, {
        name: "Google português do Brasil"
    }, {
        name: "Google русский"
    }, {
        name: "Google हिन्दी"
    }, {
        name: "Google 日本語"
    }, {
        name: "Google 普通话（中国大陆）"
    }, {
        name: "Google 粤語（香港）"
    }, {
        name: "zh-HK",
        rate: .25
    }, {
        name: "Fallback Chinese (Hong Kong) Female",
        lang: "zh-HK",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Google 粤語（香港）"
    }, {
        name: "zh-TW",
        rate: .25
    }, {
        name: "Fallback Chinese (Taiwan) Female",
        lang: "zh-TW",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Microsoft George Mobile - English (United Kingdom)",
        lang: "en-GB"
    }, {
        name: "Microsoft Susan Mobile - English (United Kingdom)",
        lang: "en-GB"
    }, {
        name: "Microsoft Hazel Mobile - English (United Kingdom)",
        lang: "en-GB"
    }, {
        name: "Microsoft Heera Mobile - English (India)",
        lang: "en-In"
    }, {
        name: "Microsoft Irina Mobile - Russian (Russia)",
        lang: "ru-RU"
    }, {
        name: "Microsoft Hedda Mobile - German (Germany)",
        lang: "de-DE"
    }, {
        name: "Microsoft Katja Mobile - German (Germany)",
        lang: "de-DE"
    }, {
        name: "Microsoft Helena Mobile - Spanish (Spain)",
        lang: "es-ES"
    }, {
        name: "Microsoft Laura Mobile - Spanish (Spain)",
        lang: "es-ES"
    }, {
        name: "Microsoft Sabina Mobile - Spanish (Mexico)",
        lang: "es-MX"
    }, {
        name: "Microsoft Julie Mobile - French (France)",
        lang: "fr-FR"
    }, {
        name: "Microsoft Paulina Mobile - Polish (Poland)",
        lang: "pl-PL"
    }, {
        name: "Microsoft Huihui Mobile - Chinese (Simplified, PRC)",
        lang: "zh-CN"
    }, {
        name: "Microsoft Yaoyao Mobile - Chinese (Simplified, PRC)",
        lang: "zh-CN"
    }, {
        name: "Microsoft Tracy Mobile - Chinese (Traditional, Hong Kong S.A.R.)",
        lang: "zh-CN"
    }, {
        name: "Microsoft Elsa Mobile - Italian (Italy)",
        lang: "it-IT"
    }, {
        name: "Microsoft Maria Mobile - Portuguese (Brazil)",
        lang: "pt-BR"
    }, {
        name: "Microsoft Ayumi Mobile - Japanese (Japan)",
        lang: "ja-JP"
    }, {
        name: "Microsoft Haruka Mobile - Japanese (Japan)",
        lang: "ja-JP"
    }, {
        name: "Helena",
        lang: "de-DE"
    }, {
        name: "Catherine",
        lang: "en-AU"
    }, {
        name: "Arthur",
        lang: "en-GB"
    }, {
        name: "Martha",
        lang: "en-GB"
    }, {
        name: "Marie",
        lang: "fr-FR"
    }, {
        name: "O-ren",
        lang: "ja-JP"
    }, {
        name: "Yu-shu",
        lang: "zh-CN"
    }, {
        name: "Microsoft David - English (United States)",
        lang: "en-US"
    }, {
        name: "Microsoft Zira - English (United States)",
        lang: "en-US"
    }, {
        name: "Microsoft Mark - English (United States)",
        lang: "en-US"
    }, {
        name: "Microsoft George - English (United Kingdom)",
        lang: "en-GB"
    }, {
        name: "Microsoft Susan - English (United Kingdom)",
        lang: "en-GB"
    }, {
        name: "Microsoft Hazel - English (United Kingdom)",
        lang: "en-GB"
    }, {
        name: "Microsoft Heera - English (India)",
        lang: "en-In"
    }, {
        name: "Microsoft Irina - Russian (Russia)",
        lang: "ru-RU"
    }, {
        name: "Microsoft Hedda - German (Germany)",
        lang: "de-DE"
    }, {
        name: "Microsoft Katja - German (Germany)",
        lang: "de-DE"
    }, {
        name: "Microsoft Helena - Spanish (Spain)",
        lang: "es-ES"
    }, {
        name: "Microsoft Laura - Spanish (Spain)",
        lang: "es-ES"
    }, {
        name: "Microsoft Sabina - Spanish (Mexico)",
        lang: "es-MX"
    }, {
        name: "Microsoft Julie - French (France)",
        lang: "fr-FR"
    }, {
        name: "Microsoft Paulina - Polish (Poland)",
        lang: "pl-PL"
    }, {
        name: "Microsoft Huihui - Chinese (Simplified, PRC)",
        lang: "zh-CN"
    }, {
        name: "Microsoft Yaoyao - Chinese (Simplified, PRC)",
        lang: "zh-CN"
    }, {
        name: "Microsoft Tracy - Chinese (Traditional, Hong Kong S.A.R.)",
        lang: "zh-CN"
    }, {
        name: "Microsoft Elsa - Italian (Italy)",
        lang: "it-IT"
    }, {
        name: "Microsoft Maria - Portuguese (Brazil)",
        lang: "pt-BR"
    }, {
        name: "Microsoft Ayumi - Japanese (Japan)",
        lang: "ja-JP"
    }, {
        name: "Microsoft Haruka - Japanese (Japan)",
        lang: "ja-JP"
    }, {
        name: "Microsoft Hortense - French (France)",
        lang: "fr-FR"
    }, {
        name: "Microsoft Hanhan - Chinese (Traditional, Taiwan)",
        lang: "zh-TW"
    }, {
        name: "Microsoft Heami - Korean (Korean)",
        lang: "ko-KR"
    }, {
        name: "Microsoft Stefan - German (Germany)",
        lang: "de-DE"
    }, {
        name: "Microsoft Ravi - English (India)",
        lang: "en-IN"
    }, {
        name: "Microsoft Pablo - Spanish (Spain)",
        lang: "es-ES"
    }, {
        name: "Microsoft Raul - Spanish (Mexico)",
        lang: "es-MX"
    }, {
        name: "Microsoft Paul - French (France)",
        lang: "fr-FR"
    }, {
        name: "Microsoft Cosimo - Italian (Italy)",
        lang: "it-IT"
    }, {
        name: "Microsoft Ichiro - Japanese (Japan)",
        lang: "ja-JP"
    }, {
        name: "Microsoft Adam - Polish (Poland)",
        lang: "pl-PL"
    }, {
        name: "Microsoft Daniel - Portuguese (Brazil)",
        lang: "pt-BR"
    }, {
        name: "Microsoft Pavel - Russian (Russia)",
        lang: "ru-RU"
    }, {
        name: "Microsoft Kangkang - Chinese (Simplified, PRC)",
        lang: "zh-CN"
    }, {
        name: "Microsoft Danny - Chinese (Traditional, Hong Kong S.A.R.)",
        lang: "zh-HK"
    }, {
        name: "Microsoft Yating - Chinese (Traditional, Taiwan)",
        lang: "zh-TW"
    }, {
        name: "Microsoft Zhiwei - Chinese (Traditional, Taiwan)",
        lang: "zh-TW"
    }, {
        name: "Microsoft Hortense Mobile - French (France)",
        lang: "fr-FR"
    }, {
        name: "Microsoft Hanhan Mobile - Chinese (Traditional, Taiwan)",
        lang: "zh-TW"
    }, {
        name: "Microsoft Heami Mobile - Korean (Korean)",
        lang: "ko-KR"
    }, {
        name: "Microsoft Stefan Mobile - German (Germany)",
        lang: "de-DE"
    }, {
        name: "Microsoft Ravi Mobile - English (India)",
        lang: "en-IN"
    }, {
        name: "Microsoft Pablo Mobile - Spanish (Spain)",
        lang: "es-ES"
    }, {
        name: "Microsoft Raul Mobile - Spanish (Mexico)",
        lang: "es-MX"
    }, {
        name: "Microsoft Paul Mobile - French (France)",
        lang: "fr-FR"
    }, {
        name: "Microsoft Cosimo Mobile - Italian (Italy)",
        lang: "it-IT"
    }, {
        name: "Microsoft Ichiro Mobile - Japanese (Japan)",
        lang: "ja-JP"
    }, {
        name: "Microsoft Adam Mobile - Polish (Poland)",
        lang: "pl-PL"
    }, {
        name: "Microsoft Daniel Mobile - Portuguese (Brazil)",
        lang: "pt-BR"
    }, {
        name: "Microsoft Pavel Mobile - Russian (Russia)",
        lang: "ru-RU"
    }, {
        name: "Microsoft Kangkang Mobile - Chinese (Simplified, PRC)",
        lang: "zh-CN"
    }, {
        name: "Microsoft Danny Mobile - Chinese (Traditional, Hong Kong S.A.R.)",
        lang: "zh-HK"
    }, {
        name: "Microsoft Yating Mobile - Chinese (Traditional, Taiwan)",
        lang: "zh-TW"
    }, {
        name: "Microsoft Zhiwei Mobile - Chinese (Traditional, Taiwan)",
        lang: "zh-TW"
    }, {
        name: "Microsoft David Desktop - English (United States)",
        lang: "en-US"
    }, {
        name: "Microsoft Zira Desktop - English (United States)",
        lang: "en-US"
    }, {
        name: "Microsoft Mark Desktop - English (United States)",
        lang: "en-US"
    }, {
        name: "Microsoft George Desktop - English (United Kingdom)",
        lang: "en-GB"
    }, {
        name: "Microsoft Susan Desktop - English (United Kingdom)",
        lang: "en-GB"
    }, {
        name: "Microsoft Hazel Desktop - English (United Kingdom)",
        lang: "en-GB"
    }, {
        name: "Microsoft Heera Desktop - English (India)",
        lang: "en-In"
    }, {
        name: "Microsoft Irina Desktop - Russian (Russia)",
        lang: "ru-RU"
    }, {
        name: "Microsoft Hedda Desktop - German (Germany)",
        lang: "de-DE"
    }, {
        name: "Microsoft Katja Desktop - German (Germany)",
        lang: "de-DE"
    }, {
        name: "Microsoft Helena Desktop - Spanish (Spain)",
        lang: "es-ES"
    }, {
        name: "Microsoft Laura Desktop - Spanish (Spain)",
        lang: "es-ES"
    }, {
        name: "Microsoft Sabina Desktop - Spanish (Mexico)",
        lang: "es-MX"
    }, {
        name: "Microsoft Julie Desktop - French (France)",
        lang: "fr-FR"
    }, {
        name: "Microsoft Paulina Desktop - Polish (Poland)",
        lang: "pl-PL"
    }, {
        name: "Microsoft Huihui Desktop - Chinese (Simplified, PRC)",
        lang: "zh-CN"
    }, {
        name: "Microsoft Yaoyao Desktop - Chinese (Simplified, PRC)",
        lang: "zh-CN"
    }, {
        name: "Microsoft Tracy Desktop - Chinese (Traditional, Hong Kong S.A.R.)",
        lang: "zh-CN"
    }, {
        name: "Microsoft Elsa Desktop - Italian (Italy)",
        lang: "it-IT"
    }, {
        name: "Microsoft Maria Desktop - Portuguese (Brazil)",
        lang: "pt-BR"
    }, {
        name: "Microsoft Ayumi Desktop - Japanese (Japan)",
        lang: "ja-JP"
    }, {
        name: "Microsoft Haruka Desktop - Japanese (Japan)",
        lang: "ja-JP"
    }, {
        name: "Microsoft Hortense Desktop - French (France)",
        lang: "fr-FR"
    }, {
        name: "Microsoft Hanhan Desktop - Chinese (Traditional, Taiwan)",
        lang: "zh-TW"
    }, {
        name: "Microsoft Heami Desktop - Korean (Korean)",
        lang: "ko-KR"
    }, {
        name: "Microsoft Stefan Desktop - German (Germany)",
        lang: "de-DE"
    }, {
        name: "Microsoft Ravi Desktop - English (India)",
        lang: "en-IN"
    }, {
        name: "Microsoft Pablo Desktop - Spanish (Spain)",
        lang: "es-ES"
    }, {
        name: "Microsoft Raul Desktop - Spanish (Mexico)",
        lang: "es-MX"
    }, {
        name: "Microsoft Paul Desktop - French (France)",
        lang: "fr-FR"
    }, {
        name: "Microsoft Cosimo Desktop - Italian (Italy)",
        lang: "it-IT"
    }, {
        name: "Microsoft Ichiro Desktop - Japanese (Japan)",
        lang: "ja-JP"
    }, {
        name: "Microsoft Adam Desktop - Polish (Poland)",
        lang: "pl-PL"
    }, {
        name: "Microsoft Daniel Desktop - Portuguese (Brazil)",
        lang: "pt-BR"
    }, {
        name: "Microsoft Pavel Desktop - Russian (Russia)",
        lang: "ru-RU"
    }, {
        name: "Microsoft Kangkang Desktop - Chinese (Simplified, PRC)",
        lang: "zh-CN"
    }, {
        name: "Microsoft Danny Desktop - Chinese (Traditional, Hong Kong S.A.R.)",
        lang: "zh-HK"
    }, {
        name: "Microsoft Yating Desktop - Chinese (Traditional, Taiwan)",
        lang: "zh-TW"
    }, {
        name: "Microsoft Zhiwei Desktop - Chinese (Traditional, Taiwan)",
        lang: "zh-TW"
    }, {
        name: "Martin",
        lang: "de-DE"
    }, {
        name: "Daniel",
        lang: "fr-FR"
    }, {
        name: "Hattori",
        lang: "ja-JP"
    }, {
        name: "Li-mu",
        lang: "zh-CN"
    }, {
        name: "Gordon",
        lang: "en-AU"
    }, {
        name: "Aaron",
        lang: "en-US"
    }, {
        name: "Nicky",
        lang: "en-US"
    }, {
        name: "Microsoft Hanhan Desktop - Chinese (Taiwan)",
        lang: "zh-TW"
    }, {
        name: "Microsoft Heami Desktop - Korean",
        lang: "ko-KR"
    }, {
        name: "Fallback Australian Male",
        lang: "en-AU",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Russian Male",
        lang: "ru",
        fallbackvoice: !0,
        service: "g3",
        gender: "male",
        deprecated: !0
    }, {
        name: "Fallback Arabic Male",
        lang: "ar",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Chinese",
        lang: "zh-CN",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Chinese HK",
        lang: "zh-HK",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Chinese TW",
        lang: "zh-TW",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback French Male",
        lang: "fr",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Deutsch Male",
        lang: "de",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Hindi Male",
        lang: "hi",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Indonesian Male",
        lang: "id",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Japanese Male",
        lang: "ja",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Korean Male",
        lang: "ko",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Polish Male",
        lang: "pl",
        fallbackvoice: !0,
        service: "g1",
        gender: "male"
    }, {
        name: "Fallback Brazilian Portuguese Male",
        lang: "pt-BR",
        fallbackvoice: !0,
        service: "g3",
        gender: "male",
        deprecated: !0
    }, {
        name: "Fallback Portuguese Male",
        lang: "pt-PT",
        fallbackvoice: !0,
        service: "g1",
        gender: "male"
    }, {
        name: "Fallback Spanish Male",
        lang: "es",
        fallbackvoice: !0,
        service: "g3",
        gender: "male",
        deprecated: !0
    }, {
        name: "Fallback Spanish (Latin American) Male",
        lang: "es-419",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Thai Male",
        lang: "th",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Turkish Male",
        lang: "tr",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Vietnamese Female",
        lang: "vi",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Fallback Italian Male",
        lang: "it",
        fallbackvoice: !0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Dutch Male",
        lang: "nl",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "male"
    }, {
        name: "Microsoft Anna - English (United States)",
        lang: "en-US",
        gender: "female"
    }, {
        name: "Microsoft Lili - Chinese (China)",
        lang: "zh-CN",
        gender: "female"
    }, {
        name: "Bangla Bangladesh",
        lang: "bn_BD",
        gender: "male"
    }, {
        name: "Bangla India",
        lang: "bn_IN",
        gender: "male"
    }, {
        name: "Czech Czechia",
        lang: "cs_CZ",
        gender: "female"
    }, {
        name: "Danish Denmark",
        lang: "da_DK",
        gender: "female"
    }, {
        name: "Greek Greece",
        lang: "el_GR",
        gender: "female"
    }, {
        name: "English Australia",
        lang: "en_AU",
        gender: "female"
    }, {
        name: "Estonian Estonia",
        lang: "et_EE",
        gender: "male"
    }, {
        name: "Finnish Finland",
        lang: "fi_FI",
        gender: "female"
    }, {
        name: "Filipino Philippines",
        lang: "fil_PH",
        gender: "female"
    }, {
        name: "French Canada",
        lang: "fr_CAF",
        gender: "female"
    }, {
        name: "Hungarian Hungary",
        lang: "hu_HU",
        gender: "female"
    }, {
        name: "Khmer Cambodia",
        lang: "km_KH",
        gender: "female"
    }, {
        name: "Norwegian Bokmål Norway",
        lang: "nb_NO",
        gender: "female"
    }, {
        name: "Nepali Nepal",
        lang: "ne_NP",
        gender: "female"
    }, {
        name: "Romanian Romania",
        lang: "ro_RO",
        gender: "female"
    }, {
        name: "Sinhala Sri Lanka",
        lang: "si_LK",
        gender: "female"
    }, {
        name: "Slovak Slovakia",
        lang: "sk_SK",
        gender: "female"
    }, {
        name: "Swedish Sweden",
        lang: "sv_SE",
        gender: "female"
    }, {
        name: "Ukrainian Ukraine",
        lang: "uk_UA",
        gender: "female"
    }, {
        name: "Vietnamese Vietnam",
        lang: "vi_VN",
        gender: "female"
    }, {
        name: "Cantonese Hong Kong",
        lang: "yue_HK_#Hant",
        gender: "female"
    }, {
        name: "Microsoft Server Speech Text to Speech Voice (en-US, Guy24kRUS)",
        lang: "en-US",
        gender: "male"
    }, {
        name: "Microsoft Server Speech Text to Speech Voice (en-US, Jessa24kRUS)",
        lang: "en-US",
        gender: "female"
    }, {
        name: "Microsoft Server Speech Text to Speech Voice (en-US, JessaRUS)",
        lang: "en-US",
        gender: "female"
    }, {
        name: "Microsoft Server Speech Text to Speech Voice (en-US, ZiraRUS)",
        lang: "en-US",
        gender: "female"
    }, {
        name: "Fallback Bangla Bangladeh Female",
        lang: "bn-BD",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "female"
    }, {
        name: "Fallback Bangla Bangladeh Male",
        lang: "bn-BD",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Filipino Female",
        lang: "fil-PH",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "female"
    }, {
        name: "Fallback Filipino Male",
        lang: "fil-PH",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Cambodian Khmer Female",
        lang: "km-KH",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "female"
    }, {
        name: "Fallback Cambodian Khmer Male",
        lang: "km-KH",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Nepali Female",
        lang: "ne-NP",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "female"
    }, {
        name: "Fallback Sinhala Female",
        lang: "si-LK",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "female"
    }, {
        name: "Fallback Ukrainian Female",
        lang: "uk-UA",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "female"
    }, {
        name: "Fallback Cantonese Hong Kong Female",
        lang: "yue-HK",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "female"
    }, {
        name: "Fallback Cantonese Hong Kong Male",
        lang: "yue-HK",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Estonian Male",
        lang: "et-EE",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Bangla India Female",
        lang: "bn-IN",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "female"
    }, {
        name: "Fallback Bangla India Male",
        lang: "bn-IN",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback French Canadian Female",
        lang: "fr-CA",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "female"
    }, {
        name: "Fallback French Canadian Male",
        lang: "fr-CA",
        fallbackvoice: !0,
        timerSpeed: 0,
        service: "g3",
        gender: "male"
    }, {
        name: "Fallback Tamil",
        lang: "ta",
        fallbackvoice: !0,
        service: "g1",
        gender: "female"
    }, {
        name: "Tian-Tian",
        voiceURI: "com.apple.ttsbundle.Ting-Ting-compact",
        lang: "zh-CN",
        gender: "female"
    }, {
        name: "English Nigeria",
        lang: "en_NG",
        gender: "female"
    }, {
        name: "Gujarati India",
        lang: "gu_IN",
        gender: "female"
    }, {
        name: "Kannada India",
        lang: "kn_IN",
        gender: "female"
    }, {
        name: "Malayalam India",
        lang: "ml_IN",
        gender: "female"
    }, {
        name: "Marathi India",
        lang: "mr_IN",
        gender: "female"
    }, {
        name: "Tamil India",
        lang: "ta_IN",
        gender: "female"
    }, {
        name: "Telugu India",
        lang: "te_IN",
        gender: "female"
    }, {
        name: "Urdu Pakistan",
        lang: "ur_PK",
        gender: "female"
    }, {
        name: "Javanese Indonesia",
        lang: "jv_ID",
        gender: "female"
    }, {
        name: "Malay Malaysia",
        lang: "ms_MY",
        gender: "female"
    }, {
        name: "Chinese Hong Kong",
        lang: "zh_HK_#Hans",
        gender: "female"
    }, {
        name: "Chinese Hong Kong",
        lang: "zh_HK_#Hant",
        gender: "female"
    }, {
        name: "Microsoft Tolga - Turkish (Turkey)",
        lang: "tr-TR",
        gender: "male"
    }, {
        name: "Korean (South Korea)",
        voiceURI: "moz-tts:android:ko_KR",
        lang: "ko-KR",
        gender: "female"
    }, {
        name: "Marathi (India)",
        voiceURI: "moz-tts:android:mr_IN",
        lang: "mr-IN",
        gender: "female"
    }, {
        name: "Russian (Russia)",
        voiceURI: "moz-tts:android:ru_RU",
        lang: "ru-RU",
        gender: "female"
    }, {
        name: "Chinese (Taiwan)",
        voiceURI: "moz-tts:android:zh_TW",
        lang: "zh-TW",
        gender: "female"
    }, {
        name: "Hungarian (Hungary)",
        voiceURI: "moz-tts:android:hu_HU",
        lang: "hu-HU",
        gender: "female"
    }, {
        name: "Thai (Thailand)",
        voiceURI: "moz-tts:android:th_TH",
        lang: "th-TH",
        gender: "female"
    }, {
        name: "Urdu (Pakistan)",
        voiceURI: "moz-tts:android:ur_PK",
        lang: "ur-PK",
        gender: "female"
    }, {
        name: "Norwegian Bokmål (Norway)",
        voiceURI: "moz-tts:android:nb_NO",
        lang: "nb-NO",
        gender: "female"
    }, {
        name: "Danish (Denmark)",
        voiceURI: "moz-tts:android:da_DK",
        lang: "da-DK",
        gender: "female"
    }, {
        name: "Turkish (Turkey)",
        voiceURI: "moz-tts:android:tr_TR",
        lang: "tr-TR",
        gender: "female"
    }, {
        name: "Estonian (Estonia)",
        voiceURI: "moz-tts:android:et_EE",
        lang: "et-EE",
        gender: "male"
    }, {
        name: "Bosnian",
        voiceURI: "moz-tts:android:bs",
        lang: "bs",
        deprecated: !0
    }, {
        name: "Swahili",
        voiceURI: "moz-tts:android:sw",
        lang: "sw",
        deprecated: !0
    }, {
        name: "Portuguese (Portugal)",
        voiceURI: "moz-tts:android:pt_PT",
        lang: "pt-PT",
        gender: "female"
    }, {
        name: "Vietnamese (Vietnam)",
        voiceURI: "moz-tts:android:vi_VN",
        lang: "vi-VN",
        gender: "female"
    }, {
        name: "English (United States)",
        voiceURI: "moz-tts:android:en_US",
        lang: "en-US",
        gender: "female"
    }, {
        name: "Swedish (Sweden)",
        voiceURI: "moz-tts:android:sv_SE",
        lang: "sv-SE",
        gender: "female"
    }, {
        name: "Arabic",
        voiceURI: "moz-tts:android:ar",
        lang: "ar",
        gender: "female"
    }, {
        name: "Sundanese (Indonesia)",
        voiceURI: "moz-tts:android:su_ID",
        lang: "su-ID",
        gender: "female"
    }, {
        name: "Bangla (Bangladesh)",
        voiceURI: "moz-tts:android:bn_BD",
        lang: "bn-BD",
        gender: "male"
    }, {
        name: "Gujarati (India)",
        voiceURI: "moz-tts:android:gu_IN",
        lang: "gu-IN",
        gender: "female"
    }, {
        name: "Kannada (India)",
        voiceURI: "moz-tts:android:kn_IN",
        lang: "kn-IN",
        gender: "female"
    }, {
        name: "Greek (Greece)",
        voiceURI: "moz-tts:android:el_GR",
        lang: "el-GR",
        gender: "female"
    }, {
        name: "Hindi (India)",
        voiceURI: "moz-tts:android:hi_IN",
        lang: "hi-IN",
        gender: "female"
    }, {
        name: "Finnish (Finland)",
        voiceURI: "moz-tts:android:fi_FI",
        lang: "fi-FI",
        gender: "female"
    }, {
        name: "Khmer (Cambodia)",
        voiceURI: "moz-tts:android:km_KH",
        lang: "km-KH",
        gender: "female"
    }, {
        name: "Bangla (India)",
        voiceURI: "moz-tts:android:bn_IN",
        lang: "bn-IN",
        gender: "male"
    }, {
        name: "French (France)",
        voiceURI: "moz-tts:android:fr_FR",
        lang: "fr-FR",
        gender: "female"
    }, {
        name: "Ukrainian (Ukraine)",
        voiceURI: "moz-tts:android:uk_UA",
        lang: "uk-UA",
        gender: "female"
    }, {
        name: "English (Australia)",
        voiceURI: "moz-tts:android:en_AU",
        lang: "en-AU",
        gender: "female"
    }, {
        name: "Dutch (Netherlands)",
        voiceURI: "moz-tts:android:nl_NL",
        lang: "nl-NL",
        gender: "female"
    }, {
        name: "French (Canada)",
        voiceURI: "moz-tts:android:fr_CA",
        lang: "fr-CA",
        gender: "female"
    }, {
        name: "Serbian",
        voiceURI: "moz-tts:android:sr",
        lang: "sr",
        gender: "female"
    }, {
        name: "Portuguese (Brazil)",
        voiceURI: "moz-tts:android:pt_BR",
        lang: "pt-BR",
        gender: "female"
    }, {
        name: "Malayalam (India)",
        voiceURI: "moz-tts:android:ml_IN",
        lang: "ml-IN",
        gender: "female"
    }, {
        name: "Sinhala (Sri Lanka)",
        voiceURI: "moz-tts:android:si_LK",
        lang: "si-LK",
        gender: "female"
    }, {
        name: "German (Germany)",
        voiceURI: "moz-tts:android:de_DE",
        lang: "de-DE",
        gender: "female"
    }, {
        name: "Kurdish",
        voiceURI: "moz-tts:android:ku",
        lang: "ku",
        deprecated: !0
    }, {
        name: "Czech (Czechia)",
        voiceURI: "moz-tts:android:cs_CZ",
        lang: "cs-CZ",
        gender: "female"
    }, {
        name: "Polish (Poland)",
        voiceURI: "moz-tts:android:pl_PL",
        lang: "pl-PL",
        gender: "female"
    }, {
        name: "Slovak (Slovakia)",
        voiceURI: "moz-tts:android:sk_SK",
        lang: "sk-SK",
        gender: "female"
    }, {
        name: "Filipino (Philippines)",
        voiceURI: "moz-tts:android:fil_PH",
        lang: "fil-PH",
        gender: "female"
    }, {
        name: "Italian (Italy)",
        voiceURI: "moz-tts:android:it_IT",
        lang: "it-IT",
        gender: "female"
    }, {
        name: "Nepali (Nepal)",
        voiceURI: "moz-tts:android:ne_NP",
        lang: "ne-NP",
        gender: "female"
    }, {
        name: "Malay (Malaysia)",
        voiceURI: "moz-tts:android:ms_MY",
        lang: "ms-MY",
        gender: "female"
    }, {
        name: "Croatian",
        voiceURI: "moz-tts:android:hr",
        lang: "hr",
        deprecated: !0
    }, {
        name: "English (Nigeria)",
        voiceURI: "moz-tts:android:en_NG",
        lang: "en-NG",
        gender: "female"
    }, {
        name: "Chinese (China)",
        voiceURI: "moz-tts:android:zh_CN",
        lang: "zh-CN",
        gender: "female"
    }, {
        name: "Spanish (Spain)",
        voiceURI: "moz-tts:android:es_ES",
        lang: "es-ES",
        gender: "female"
    }, {
        name: "Welsh",
        voiceURI: "moz-tts:android:cy",
        lang: "cy",
        deprecated: !0
    }, {
        name: "Tamil (India)",
        voiceURI: "moz-tts:android:ta_IN",
        lang: "ta-IN",
        gender: "female"
    }, {
        name: "Japanese (Japan)",
        voiceURI: "moz-tts:android:ja_JP",
        lang: "ja-JP",
        gender: "female"
    }, {
        name: "Albanian",
        voiceURI: "moz-tts:android:sq",
        lang: "sq",
        deprecated: !0
    }, {
        name: "Cantonese (Hong Kong)",
        voiceURI: "moz-tts:android:yue_HK",
        lang: "yue-HK",
        gender: "female"
    }, {
        name: "English (India)",
        voiceURI: "moz-tts:android:en_IN",
        lang: "en-IN",
        gender: "female"
    }, {
        name: "Spanish (United States)",
        voiceURI: "moz-tts:android:es_US",
        lang: "es-US",
        gender: "female"
    }, {
        name: "Javanese (Indonesia)",
        voiceURI: "moz-tts:android:jv_ID",
        lang: "jv-ID",
        gender: "female"
    }, {
        name: "Latin",
        voiceURI: "moz-tts:android:la",
        lang: "la",
        deprecated: !0
    }, {
        name: "Indonesian (Indonesia)",
        voiceURI: "moz-tts:android:in_ID",
        lang: "in-ID",
        gender: "female"
    }, {
        name: "Telugu (India)",
        voiceURI: "moz-tts:android:te_IN",
        lang: "te-IN",
        gender: "female"
    }, {
        name: "Romanian (Romania)",
        voiceURI: "moz-tts:android:ro_RO",
        lang: "ro-RO",
        gender: "female"
    }, {
        name: "Catalan",
        voiceURI: "moz-tts:android:ca",
        lang: "ca",
        gender: "female"
    }, {
        name: "English (United Kingdom)",
        voiceURI: "moz-tts:android:en_GB",
        lang: "en-GB",
        gender: "female"
    }, {
        name: "Rishi",
        voiceURI: "com.apple.ttsbundle.Rishi-compact",
        lang: "en-IN",
        gender: "male"
    }];
    n.iOS = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);
    n.iOS9 = /(iphone|ipod|ipad).* os 9_/.test(navigator.userAgent.toLowerCase());
    n.iOS10 = /(iphone|ipod|ipad).* os 10_/.test(navigator.userAgent.toLowerCase());
    n.iOS11 = /(iphone|ipod|ipad).* os 11_/.test(navigator.userAgent.toLowerCase());
    n.iOS11plus = /(iphone|ipod|ipad).* os 1[1-9]/.test(navigator.userAgent.toLowerCase());
    n.iOS9plus = /(iphone|ipod|ipad).* os 10_/.test(navigator.userAgent.toLowerCase());
    n.iOS12_0 = /(iphone|ipod|ipad).* os 12_0/.test(navigator.userAgent.toLowerCase());
    n.iOS12 = /(iphone|ipod|ipad).* os 12_/.test(navigator.userAgent.toLowerCase());
    n.is_chrome = -1 < navigator.userAgent.indexOf("Chrome");
    n.is_safari = -1 < navigator.userAgent.indexOf("Safari");
    n.is_chrome && n.is_safari && (n.is_safari = !1);
    n.is_opera = !!window.opera || 0 <= navigator.userAgent.indexOf(" OPR/");
    n.is_android = -1 < navigator.userAgent.toLowerCase().indexOf("android");
    n.iOS_initialized = !1;
    n.iOS9_initialized = !1;
    n.iOS10_initialized = !1;
    n.iOS11_initialized = !1;
    n.cache_ios_voices = [{
        name: "he-IL",
        voiceURI: "he-IL",
        lang: "he-IL"
    }, {
        name: "th-TH",
        voiceURI: "th-TH",
        lang: "th-TH"
    }, {
        name: "pt-BR",
        voiceURI: "pt-BR",
        lang: "pt-BR"
    }, {
        name: "sk-SK",
        voiceURI: "sk-SK",
        lang: "sk-SK"
    }, {
        name: "fr-CA",
        voiceURI: "fr-CA",
        lang: "fr-CA"
    }, {
        name: "ro-RO",
        voiceURI: "ro-RO",
        lang: "ro-RO"
    }, {
        name: "no-NO",
        voiceURI: "no-NO",
        lang: "no-NO"
    }, {
        name: "fi-FI",
        voiceURI: "fi-FI",
        lang: "fi-FI"
    }, {
        name: "pl-PL",
        voiceURI: "pl-PL",
        lang: "pl-PL"
    }, {
        name: "de-DE",
        voiceURI: "de-DE",
        lang: "de-DE"
    }, {
        name: "nl-NL",
        voiceURI: "nl-NL",
        lang: "nl-NL"
    }, {
        name: "id-ID",
        voiceURI: "id-ID",
        lang: "id-ID"
    }, {
        name: "tr-TR",
        voiceURI: "tr-TR",
        lang: "tr-TR"
    }, {
        name: "it-IT",
        voiceURI: "it-IT",
        lang: "it-IT"
    }, {
        name: "pt-PT",
        voiceURI: "pt-PT",
        lang: "pt-PT"
    }, {
        name: "fr-FR",
        voiceURI: "fr-FR",
        lang: "fr-FR"
    }, {
        name: "ru-RU",
        voiceURI: "ru-RU",
        lang: "ru-RU"
    }, {
        name: "es-MX",
        voiceURI: "es-MX",
        lang: "es-MX"
    }, {
        name: "zh-HK",
        voiceURI: "zh-HK",
        lang: "zh-HK"
    }, {
        name: "sv-SE",
        voiceURI: "sv-SE",
        lang: "sv-SE"
    }, {
        name: "hu-HU",
        voiceURI: "hu-HU",
        lang: "hu-HU"
    }, {
        name: "zh-TW",
        voiceURI: "zh-TW",
        lang: "zh-TW"
    }, {
        name: "es-ES",
        voiceURI: "es-ES",
        lang: "es-ES"
    }, {
        name: "zh-CN",
        voiceURI: "zh-CN",
        lang: "zh-CN"
    }, {
        name: "nl-BE",
        voiceURI: "nl-BE",
        lang: "nl-BE"
    }, {
        name: "en-GB",
        voiceURI: "en-GB",
        lang: "en-GB"
    }, {
        name: "ar-SA",
        voiceURI: "ar-SA",
        lang: "ar-SA"
    }, {
        name: "ko-KR",
        voiceURI: "ko-KR",
        lang: "ko-KR"
    }, {
        name: "cs-CZ",
        voiceURI: "cs-CZ",
        lang: "cs-CZ"
    }, {
        name: "en-ZA",
        voiceURI: "en-ZA",
        lang: "en-ZA"
    }, {
        name: "en-AU",
        voiceURI: "en-AU",
        lang: "en-AU"
    }, {
        name: "da-DK",
        voiceURI: "da-DK",
        lang: "da-DK"
    }, {
        name: "en-US",
        voiceURI: "en-US",
        lang: "en-US"
    }, {
        name: "en-IE",
        voiceURI: "en-IE",
        lang: "en-IE"
    }, {
        name: "hi-IN",
        voiceURI: "hi-IN",
        lang: "hi-IN"
    }, {
        name: "el-GR",
        voiceURI: "el-GR",
        lang: "el-GR"
    }, {
        name: "ja-JP",
        voiceURI: "ja-JP",
        lang: "ja-JP"
    }];
    n.cache_ios9_voices = [{
        name: "Maged",
        voiceURI: "com.apple.ttsbundle.Maged-compact",
        lang: "ar-SA",
        localService: !0,
        "default": !0
    }, {
        name: "Zuzana",
        voiceURI: "com.apple.ttsbundle.Zuzana-compact",
        lang: "cs-CZ",
        localService: !0,
        "default": !0
    }, {
        name: "Sara",
        voiceURI: "com.apple.ttsbundle.Sara-compact",
        lang: "da-DK",
        localService: !0,
        "default": !0
    }, {
        name: "Anna",
        voiceURI: "com.apple.ttsbundle.Anna-compact",
        lang: "de-DE",
        localService: !0,
        "default": !0
    }, {
        name: "Melina",
        voiceURI: "com.apple.ttsbundle.Melina-compact",
        lang: "el-GR",
        localService: !0,
        "default": !0
    }, {
        name: "Karen",
        voiceURI: "com.apple.ttsbundle.Karen-compact",
        lang: "en-AU",
        localService: !0,
        "default": !0
    }, {
        name: "Daniel",
        voiceURI: "com.apple.ttsbundle.Daniel-compact",
        lang: "en-GB",
        localService: !0,
        "default": !0
    }, {
        name: "Moira",
        voiceURI: "com.apple.ttsbundle.Moira-compact",
        lang: "en-IE",
        localService: !0,
        "default": !0
    }, {
        name: "Samantha (Enhanced)",
        voiceURI: "com.apple.ttsbundle.Samantha-premium",
        lang: "en-US",
        localService: !0,
        "default": !0
    }, {
        name: "Samantha",
        voiceURI: "com.apple.ttsbundle.Samantha-compact",
        lang: "en-US",
        localService: !0,
        "default": !0
    }, {
        name: "Tessa",
        voiceURI: "com.apple.ttsbundle.Tessa-compact",
        lang: "en-ZA",
        localService: !0,
        "default": !0
    }, {
        name: "Monica",
        voiceURI: "com.apple.ttsbundle.Monica-compact",
        lang: "es-ES",
        localService: !0,
        "default": !0
    }, {
        name: "Paulina",
        voiceURI: "com.apple.ttsbundle.Paulina-compact",
        lang: "es-MX",
        localService: !0,
        "default": !0
    }, {
        name: "Satu",
        voiceURI: "com.apple.ttsbundle.Satu-compact",
        lang: "fi-FI",
        localService: !0,
        "default": !0
    }, {
        name: "Amelie",
        voiceURI: "com.apple.ttsbundle.Amelie-compact",
        lang: "fr-CA",
        localService: !0,
        "default": !0
    }, {
        name: "Thomas",
        voiceURI: "com.apple.ttsbundle.Thomas-compact",
        lang: "fr-FR",
        localService: !0,
        "default": !0
    }, {
        name: "Carmit",
        voiceURI: "com.apple.ttsbundle.Carmit-compact",
        lang: "he-IL",
        localService: !0,
        "default": !0
    }, {
        name: "Lekha",
        voiceURI: "com.apple.ttsbundle.Lekha-compact",
        lang: "hi-IN",
        localService: !0,
        "default": !0
    }, {
        name: "Mariska",
        voiceURI: "com.apple.ttsbundle.Mariska-compact",
        lang: "hu-HU",
        localService: !0,
        "default": !0
    }, {
        name: "Damayanti",
        voiceURI: "com.apple.ttsbundle.Damayanti-compact",
        lang: "id-ID",
        localService: !0,
        "default": !0
    }, {
        name: "Alice",
        voiceURI: "com.apple.ttsbundle.Alice-compact",
        lang: "it-IT",
        localService: !0,
        "default": !0
    }, {
        name: "Kyoko",
        voiceURI: "com.apple.ttsbundle.Kyoko-compact",
        lang: "ja-JP",
        localService: !0,
        "default": !0
    }, {
        name: "Yuna",
        voiceURI: "com.apple.ttsbundle.Yuna-compact",
        lang: "ko-KR",
        localService: !0,
        "default": !0
    }, {
        name: "Ellen",
        voiceURI: "com.apple.ttsbundle.Ellen-compact",
        lang: "nl-BE",
        localService: !0,
        "default": !0
    }, {
        name: "Xander",
        voiceURI: "com.apple.ttsbundle.Xander-compact",
        lang: "nl-NL",
        localService: !0,
        "default": !0
    }, {
        name: "Nora",
        voiceURI: "com.apple.ttsbundle.Nora-compact",
        lang: "no-NO",
        localService: !0,
        "default": !0
    }, {
        name: "Zosia",
        voiceURI: "com.apple.ttsbundle.Zosia-compact",
        lang: "pl-PL",
        localService: !0,
        "default": !0
    }, {
        name: "Luciana",
        voiceURI: "com.apple.ttsbundle.Luciana-compact",
        lang: "pt-BR",
        localService: !0,
        "default": !0
    }, {
        name: "Joana",
        voiceURI: "com.apple.ttsbundle.Joana-compact",
        lang: "pt-PT",
        localService: !0,
        "default": !0
    }, {
        name: "Ioana",
        voiceURI: "com.apple.ttsbundle.Ioana-compact",
        lang: "ro-RO",
        localService: !0,
        "default": !0
    }, {
        name: "Milena",
        voiceURI: "com.apple.ttsbundle.Milena-compact",
        lang: "ru-RU",
        localService: !0,
        "default": !0
    }, {
        name: "Laura",
        voiceURI: "com.apple.ttsbundle.Laura-compact",
        lang: "sk-SK",
        localService: !0,
        "default": !0
    }, {
        name: "Alva",
        voiceURI: "com.apple.ttsbundle.Alva-compact",
        lang: "sv-SE",
        localService: !0,
        "default": !0
    }, {
        name: "Kanya",
        voiceURI: "com.apple.ttsbundle.Kanya-compact",
        lang: "th-TH",
        localService: !0,
        "default": !0
    }, {
        name: "Yelda",
        voiceURI: "com.apple.ttsbundle.Yelda-compact",
        lang: "tr-TR",
        localService: !0,
        "default": !0
    }, {
        name: "Ting-Ting",
        voiceURI: "com.apple.ttsbundle.Ting-Ting-compact",
        lang: "zh-CN",
        localService: !0,
        "default": !0
    }, {
        name: "Sin-Ji",
        voiceURI: "com.apple.ttsbundle.Sin-Ji-compact",
        lang: "zh-HK",
        localService: !0,
        "default": !0
    }, {
        name: "Mei-Jia",
        voiceURI: "com.apple.ttsbundle.Mei-Jia-compact",
        lang: "zh-TW",
        localService: !0,
        "default": !0
    }];
    n.cache_ios10_voices = [{
        name: "Maged",
        voiceURI: "com.apple.ttsbundle.Maged-compact",
        lang: "ar-SA"
    }, {
        name: "Zuzana",
        voiceURI: "com.apple.ttsbundle.Zuzana-compact",
        lang: "cs-CZ"
    }, {
        name: "Sara",
        voiceURI: "com.apple.ttsbundle.Sara-compact",
        lang: "da-DK"
    }, {
        name: "Anna",
        voiceURI: "com.apple.ttsbundle.Anna-compact",
        lang: "de-DE"
    }, {
        name: "Helena",
        voiceURI: "com.apple.ttsbundle.siri_female_de-DE_compact",
        lang: "de-DE"
    }, {
        name: "Martin",
        voiceURI: "com.apple.ttsbundle.siri_male_de-DE_compact",
        lang: "de-DE"
    }, {
        name: "Nikos (Enhanced)",
        voiceURI: "com.apple.ttsbundle.Nikos-premium",
        lang: "el-GR"
    }, {
        name: "Melina",
        voiceURI: "com.apple.ttsbundle.Melina-compact",
        lang: "el-GR"
    }, {
        name: "Nikos",
        voiceURI: "com.apple.ttsbundle.Nikos-compact",
        lang: "el-GR"
    }, {
        name: "Catherine",
        voiceURI: "com.apple.ttsbundle.siri_female_en-AU_compact",
        lang: "en-AU"
    }, {
        name: "Gordon",
        voiceURI: "com.apple.ttsbundle.siri_male_en-AU_compact",
        lang: "en-AU"
    }, {
        name: "Karen",
        voiceURI: "com.apple.ttsbundle.Karen-compact",
        lang: "en-AU"
    }, {
        name: "Daniel (Enhanced)",
        voiceURI: "com.apple.ttsbundle.Daniel-premium",
        lang: "en-GB"
    }, {
        name: "Arthur",
        voiceURI: "com.apple.ttsbundle.siri_male_en-GB_compact",
        lang: "en-GB"
    }, {
        name: "Daniel",
        voiceURI: "com.apple.ttsbundle.Daniel-compact",
        lang: "en-GB"
    }, {
        name: "Martha",
        voiceURI: "com.apple.ttsbundle.siri_female_en-GB_compact",
        lang: "en-GB"
    }, {
        name: "Moira",
        voiceURI: "com.apple.ttsbundle.Moira-compact",
        lang: "en-IE"
    }, {
        name: "Nicky (Enhanced)",
        voiceURI: "com.apple.ttsbundle.siri_female_en-US_premium",
        lang: "en-US"
    }, {
        name: "Samantha (Enhanced)",
        voiceURI: "com.apple.ttsbundle.Samantha-premium",
        lang: "en-US"
    }, {
        name: "Aaron",
        voiceURI: "com.apple.ttsbundle.siri_male_en-US_compact",
        lang: "en-US"
    }, {
        name: "Fred",
        voiceURI: "com.apple.speech.synthesis.voice.Fred",
        lang: "en-US"
    }, {
        name: "Nicky",
        voiceURI: "com.apple.ttsbundle.siri_female_en-US_compact",
        lang: "en-US"
    }, {
        name: "Samantha",
        voiceURI: "com.apple.ttsbundle.Samantha-compact",
        lang: "en-US"
    }, {
        name: "Tessa",
        voiceURI: "com.apple.ttsbundle.Tessa-compact",
        lang: "en-ZA"
    }, {
        name: "Monica",
        voiceURI: "com.apple.ttsbundle.Monica-compact",
        lang: "es-ES"
    }, {
        name: "Paulina",
        voiceURI: "com.apple.ttsbundle.Paulina-compact",
        lang: "es-MX"
    }, {
        name: "Satu",
        voiceURI: "com.apple.ttsbundle.Satu-compact",
        lang: "fi-FI"
    }, {
        name: "Amelie",
        voiceURI: "com.apple.ttsbundle.Amelie-compact",
        lang: "fr-CA"
    }, {
        name: "Daniel",
        voiceURI: "com.apple.ttsbundle.siri_male_fr-FR_compact",
        lang: "fr-FR"
    }, {
        name: "Marie",
        voiceURI: "com.apple.ttsbundle.siri_female_fr-FR_compact",
        lang: "fr-FR"
    }, {
        name: "Thomas",
        voiceURI: "com.apple.ttsbundle.Thomas-compact",
        lang: "fr-FR"
    }, {
        name: "Carmit",
        voiceURI: "com.apple.ttsbundle.Carmit-compact",
        lang: "he-IL"
    }, {
        name: "Lekha",
        voiceURI: "com.apple.ttsbundle.Lekha-compact",
        lang: "hi-IN"
    }, {
        name: "Mariska",
        voiceURI: "com.apple.ttsbundle.Mariska-compact",
        lang: "hu-HU"
    }, {
        name: "Damayanti",
        voiceURI: "com.apple.ttsbundle.Damayanti-compact",
        lang: "id-ID"
    }, {
        name: "Alice",
        voiceURI: "com.apple.ttsbundle.Alice-compact",
        lang: "it-IT"
    }, {
        name: "Hattori",
        voiceURI: "com.apple.ttsbundle.siri_male_ja-JP_compact",
        lang: "ja-JP"
    }, {
        name: "Kyoko",
        voiceURI: "com.apple.ttsbundle.Kyoko-compact",
        lang: "ja-JP"
    }, {
        name: "O-ren",
        voiceURI: "com.apple.ttsbundle.siri_female_ja-JP_compact",
        lang: "ja-JP"
    }, {
        name: "Yuna",
        voiceURI: "com.apple.ttsbundle.Yuna-compact",
        lang: "ko-KR"
    }, {
        name: "Ellen",
        voiceURI: "com.apple.ttsbundle.Ellen-compact",
        lang: "nl-BE"
    }, {
        name: "Xander",
        voiceURI: "com.apple.ttsbundle.Xander-compact",
        lang: "nl-NL"
    }, {
        name: "Nora",
        voiceURI: "com.apple.ttsbundle.Nora-compact",
        lang: "no-NO"
    }, {
        name: "Zosia",
        voiceURI: "com.apple.ttsbundle.Zosia-compact",
        lang: "pl-PL"
    }, {
        name: "Luciana",
        voiceURI: "com.apple.ttsbundle.Luciana-compact",
        lang: "pt-BR"
    }, {
        name: "Joana",
        voiceURI: "com.apple.ttsbundle.Joana-compact",
        lang: "pt-PT"
    }, {
        name: "Ioana",
        voiceURI: "com.apple.ttsbundle.Ioana-compact",
        lang: "ro-RO"
    }, {
        name: "Milena",
        voiceURI: "com.apple.ttsbundle.Milena-compact",
        lang: "ru-RU"
    }, {
        name: "Laura",
        voiceURI: "com.apple.ttsbundle.Laura-compact",
        lang: "sk-SK"
    }, {
        name: "Alva",
        voiceURI: "com.apple.ttsbundle.Alva-compact",
        lang: "sv-SE"
    }, {
        name: "Kanya",
        voiceURI: "com.apple.ttsbundle.Kanya-compact",
        lang: "th-TH"
    }, {
        name: "Yelda",
        voiceURI: "com.apple.ttsbundle.Yelda-compact",
        lang: "tr-TR"
    }, {
        name: "Li-mu",
        voiceURI: "com.apple.ttsbundle.siri_male_zh-CN_compact",
        lang: "zh-CN"
    }, {
        name: "Ting-Ting",
        voiceURI: "com.apple.ttsbundle.Ting-Ting-compact",
        lang: "zh-CN"
    }, {
        name: "Yu-shu",
        voiceURI: "com.apple.ttsbundle.siri_female_zh-CN_compact",
        lang: "zh-CN"
    }, {
        name: "Sin-Ji",
        voiceURI: "com.apple.ttsbundle.Sin-Ji-compact",
        lang: "zh-HK"
    }, {
        name: "Mei-Jia",
        voiceURI: "com.apple.ttsbundle.Mei-Jia-compact",
        lang: "zh-TW"
    }];
    n.cache_ios11_voices = [{
        name: "Maged",
        voiceURI: "com.apple.ttsbundle.Maged-compact",
        lang: "ar-SA"
    }, {
        name: "Zuzana",
        voiceURI: "com.apple.ttsbundle.Zuzana-compact",
        lang: "cs-CZ"
    }, {
        name: "Sara",
        voiceURI: "com.apple.ttsbundle.Sara-compact",
        lang: "da-DK"
    }, {
        name: "Anna",
        voiceURI: "com.apple.ttsbundle.Anna-compact",
        lang: "de-DE"
    }, {
        name: "Helena",
        voiceURI: "com.apple.ttsbundle.siri_female_de-DE_compact",
        lang: "de-DE"
    }, {
        name: "Martin",
        voiceURI: "com.apple.ttsbundle.siri_male_de-DE_compact",
        lang: "de-DE"
    }, {
        name: "Melina",
        voiceURI: "com.apple.ttsbundle.Melina-compact",
        lang: "el-GR"
    }, {
        name: "Catherine",
        voiceURI: "com.apple.ttsbundle.siri_female_en-AU_compact",
        lang: "en-AU"
    }, {
        name: "Gordon",
        voiceURI: "com.apple.ttsbundle.siri_male_en-AU_compact",
        lang: "en-AU"
    }, {
        name: "Karen",
        voiceURI: "com.apple.ttsbundle.Karen-compact",
        lang: "en-AU"
    }, {
        name: "Arthur",
        voiceURI: "com.apple.ttsbundle.siri_male_en-GB_compact",
        lang: "en-GB"
    }, {
        name: "Daniel",
        voiceURI: "com.apple.ttsbundle.Daniel-compact",
        lang: "en-GB"
    }, {
        name: "Martha",
        voiceURI: "com.apple.ttsbundle.siri_female_en-GB_compact",
        lang: "en-GB"
    }, {
        name: "Moira",
        voiceURI: "com.apple.ttsbundle.Moira-compact",
        lang: "en-IE"
    }, {
        name: "Aaron",
        voiceURI: "com.apple.ttsbundle.siri_male_en-US_compact",
        lang: "en-US"
    }, {
        name: "Fred",
        voiceURI: "com.apple.speech.synthesis.voice.Fred",
        lang: "en-US"
    }, {
        name: "Nicky",
        voiceURI: "com.apple.ttsbundle.siri_female_en-US_compact",
        lang: "en-US"
    }, {
        name: "Samantha",
        voiceURI: "com.apple.ttsbundle.Samantha-compact",
        lang: "en-US"
    }, {
        name: "Tessa",
        voiceURI: "com.apple.ttsbundle.Tessa-compact",
        lang: "en-ZA"
    }, {
        name: "Monica",
        voiceURI: "com.apple.ttsbundle.Monica-compact",
        lang: "es-ES"
    }, {
        name: "Paulina",
        voiceURI: "com.apple.ttsbundle.Paulina-compact",
        lang: "es-MX"
    }, {
        name: "Satu",
        voiceURI: "com.apple.ttsbundle.Satu-compact",
        lang: "fi-FI"
    }, {
        name: "Amelie",
        voiceURI: "com.apple.ttsbundle.Amelie-compact",
        lang: "fr-CA"
    }, {
        name: "Daniel",
        voiceURI: "com.apple.ttsbundle.siri_male_fr-FR_compact",
        lang: "fr-FR"
    }, {
        name: "Marie",
        voiceURI: "com.apple.ttsbundle.siri_female_fr-FR_compact",
        lang: "fr-FR"
    }, {
        name: "Thomas",
        voiceURI: "com.apple.ttsbundle.Thomas-compact",
        lang: "fr-FR"
    }, {
        name: "Carmit",
        voiceURI: "com.apple.ttsbundle.Carmit-compact",
        lang: "he-IL"
    }, {
        name: "Lekha",
        voiceURI: "com.apple.ttsbundle.Lekha-compact",
        lang: "hi-IN"
    }, {
        name: "Mariska",
        voiceURI: "com.apple.ttsbundle.Mariska-compact",
        lang: "hu-HU"
    }, {
        name: "Damayanti",
        voiceURI: "com.apple.ttsbundle.Damayanti-compact",
        lang: "id-ID"
    }, {
        name: "Alice",
        voiceURI: "com.apple.ttsbundle.Alice-compact",
        lang: "it-IT"
    }, {
        name: "Hattori",
        voiceURI: "com.apple.ttsbundle.siri_male_ja-JP_compact",
        lang: "ja-JP"
    }, {
        name: "Kyoko",
        voiceURI: "com.apple.ttsbundle.Kyoko-compact",
        lang: "ja-JP"
    }, {
        name: "O-ren",
        voiceURI: "com.apple.ttsbundle.siri_female_ja-JP_compact",
        lang: "ja-JP"
    }, {
        name: "Yuna",
        voiceURI: "com.apple.ttsbundle.Yuna-compact",
        lang: "ko-KR"
    }, {
        name: "Ellen",
        voiceURI: "com.apple.ttsbundle.Ellen-compact",
        lang: "nl-BE"
    }, {
        name: "Xander",
        voiceURI: "com.apple.ttsbundle.Xander-compact",
        lang: "nl-NL"
    }, {
        name: "Nora",
        voiceURI: "com.apple.ttsbundle.Nora-compact",
        lang: "no-NO"
    }, {
        name: "Zosia",
        voiceURI: "com.apple.ttsbundle.Zosia-compact",
        lang: "pl-PL"
    }, {
        name: "Luciana",
        voiceURI: "com.apple.ttsbundle.Luciana-compact",
        lang: "pt-BR"
    }, {
        name: "Joana",
        voiceURI: "com.apple.ttsbundle.Joana-compact",
        lang: "pt-PT"
    }, {
        name: "Ioana",
        voiceURI: "com.apple.ttsbundle.Ioana-compact",
        lang: "ro-RO"
    }, {
        name: "Milena",
        voiceURI: "com.apple.ttsbundle.Milena-compact",
        lang: "ru-RU"
    }, {
        name: "Laura",
        voiceURI: "com.apple.ttsbundle.Laura-compact",
        lang: "sk-SK"
    }, {
        name: "Alva",
        voiceURI: "com.apple.ttsbundle.Alva-compact",
        lang: "sv-SE"
    }, {
        name: "Kanya",
        voiceURI: "com.apple.ttsbundle.Kanya-compact",
        lang: "th-TH"
    }, {
        name: "Yelda",
        voiceURI: "com.apple.ttsbundle.Yelda-compact",
        lang: "tr-TR"
    }, {
        name: "Li-mu",
        voiceURI: "com.apple.ttsbundle.siri_male_zh-CN_compact",
        lang: "zh-CN"
    }, {
        name: "Ting-Ting",
        voiceURI: "com.apple.ttsbundle.Ting-Ting-compact",
        lang: "zh-CN"
    }, {
        name: "Yu-shu",
        voiceURI: "com.apple.ttsbundle.siri_female_zh-CN_compact",
        lang: "zh-CN"
    }, {
        name: "Sin-Ji",
        voiceURI: "com.apple.ttsbundle.Sin-Ji-compact",
        lang: "zh-HK"
    }, {
        name: "Mei-Jia",
        voiceURI: "com.apple.ttsbundle.Mei-Jia-compact",
        lang: "zh-TW"
    }];
    n.systemvoices = null;
    n.CHARACTER_LIMIT = 100;
    n.VOICESUPPORT_ATTEMPTLIMIT = 5;
    n.voicesupport_attempts = 0;
    n.fallbackMode = !1;
    n.WORDS_PER_MINUTE = 130;
    n.fallback_audio = null;
    n.fallback_playbackrate = 1;
    n.def_fallback_playbackrate = n.fallback_playbackrate;
    n.fallback_audiopool = [];
    n.msgparameters = null;
    n.timeoutId = null;
    n.OnLoad_callbacks = [];
    n.useTimer = !1;
    n.utterances = [];
    n.userInteractionEvents = ["mousedown", "mouseup", "mousewheel", "keydown"];
    n.fallbackBufferLength = 5;
    n.iOS && (n.fallbackBufferLength = 2);
    t = null;
    r = 1;
    n.tstCompiled = function() {
        return !/param/.test(function() {})
    }
    ;
    n.fallbackServicePath = "undefined" != typeof rvApiEndpoint && rvApiEndpoint ? rvApiEndpoint : "https://code.responsivevoice.org/" + (n.tstCompiled() ? "" : "develop/") + "getvoice.php";
    n.default_rv = n.responsivevoices[0];
    n.debug = !1;
    n.rvsMapped = !1;
    n.forcedFallbackMode = !1;
    n.speechAllowedByUser = !0;
    n.enableEstimationTimeout = !0;
    n.analytics = {
        characterCount: 0
    };
    n.log = function() {
        n.debug
    }
    ;
    n.init = function() {
        n.is_wordpress = e();
        n.is_bundle = o();
        "undefined" == typeof rvApiKey && console.error("ResponsiveVoice missing API key. See https://responsivevoice.org/register?devtools=" + encodeURIComponent(window.location.href));
        (n.is_android || n.iOS || n.is_safari) && (n.useTimer = !0);
        n.is_opera || "undefined" == typeof speechSynthesis ? (console.log("RV: Voice synthesis not supported"),
        n.enableFallbackMode()) : setTimeout(function() {
            var t = setInterval(function() {
                var i = window.speechSynthesis.getVoices();
                0 != i.length || null != n.systemvoices && 0 != n.systemvoices.length ? (console.log("RV: Voice support ready"),
                n.systemVoicesReady(i),
                clearInterval(t)) : (console.log("Voice support NOT ready"),
                n.voicesupport_attempts++,
                n.voicesupport_attempts > n.VOICESUPPORT_ATTEMPTLIMIT && (clearInterval(t),
                null != window.speechSynthesis ? n.iOS ? (n.iOS11plus ? n.systemVoicesReady(n.cache_ios11_voices) : n.iOS10 ? n.systemVoicesReady(n.cache_ios10_voices) : n.iOS9 ? n.systemVoicesReady(n.cache_ios9_voices) : n.systemVoicesReady(n.cache_ios_voices),
                console.log("RV: Voice support ready (cached)")) : (console.log("RV: speechSynthesis present but no system voices found"),
                n.enableFallbackMode()) : n.enableFallbackMode()))
            }, 100)
        }, 100);
        (n.iOS || n.is_android || n.is_safari) && n.enableWindowClickHook();
        n.Dispatch("OnLoad")
    }
    ;
    n.systemVoicesReady = function(t) {
        n.systemvoices = t;
        n.mapRVs();
        null != n.OnVoiceReady && n.OnVoiceReady.call();
        n.Dispatch("OnReady");
        window.hasOwnProperty("dispatchEvent") && window.dispatchEvent(new Event("ResponsiveVoice_OnReady"))
    }
    ;
    n.enableFallbackMode = function() {
        n.fallbackMode = !0;
        n.forcedFallbackMode = !0;
        console.log("RV: Enabling fallback mode");
        n.mapRVs();
        null != n.OnVoiceReady && n.OnVoiceReady.call();
        n.Dispatch("OnReady");
        window.hasOwnProperty("dispatchEvent") && window.dispatchEvent(new Event("ResponsiveVoice_OnReady"));
        n.Dispatch("OnServiceSwitched")
    }
    ;
    n.getVoices = function() {
        for (var r, i = [], t = 0; t < n.responsivevoices.length; t++)
            r = n.responsivevoices[t],
            !0 !== r.deprecated && i.push({
                name: r.name
            });
        return i
    }
    ;
    n.speak = function(t, i, e) {
        var o, y, s, h, a, c, l, v, p;
        if (null == t)
            n.log("No text provided");
        else if (n.initializePermissionsTimeout && clearTimeout(n.initializePermissionsTimeout),
        n.rvsMapped)
            if (o = function(n) {
                -1 != n.search(/[\u3002]/gm) ? n.split(/[\u3002]/).filter(function(n) {
                    n && a.push(n)
                }) : a.push(n)
            }
            ,
            y = null,
            n.isPlaying())
                n.log("Cancelling previous speech"),
                n.cancel(),
                setTimeout(function() {
                    n.speak(t, i, e)
                }, 50);
            else if (null == i ? (s = n.default_rv,
            n.setDefaultVoice(s.name)) : s = n.getResponsiveVoice(i),
            s) {
                if (!0 === s.deprecated && console.warn('ResponsiveVoice: Voice "' + s.name + '" is deprecated; it might not always be the right gender, and could be removed in future releases'),
                h = {},
                null != s.mappedProfile)
                    h = s.mappedProfile;
                else if (h.systemvoice = n.getMatchedVoice(s),
                h.collectionvoice = {},
                null == h.systemvoice) {
                    console.log("RV: ERROR: No voice found for: " + i);
                    return
                }
                if (t = f(t, h),
                t = t.replace(/["`]/gm, "'"),
                n.msgparameters = e || {},
                n.msgtext = t,
                n.msgvoicename = i,
                n.onstartFired = !1,
                a = [],
                t.length > n.CHARACTER_LIMIT) {
                    for (c = t = u(t); c.length > n.CHARACTER_LIMIT; ) {
                        if (s = c.search(/([\u3002:!\u00a1?\u00bf;\(\)\[\]\u2014\u00ab\u00bb\n]+|\.[^0-9]+)/),
                        l = "",
                        (-1 == s || s >= n.CHARACTER_LIMIT) && (s = c.search(/,[^0-9]+/)),
                        (-1 == s || s >= n.CHARACTER_LIMIT) && -1 != c.search(" "))
                            for (v = c.split(" "),
                            s = 0; s < v.length; s++) {
                                if (l.length + v[s].length + 1 > n.CHARACTER_LIMIT) {
                                    v[s].length >= n.CHARACTER_LIMIT && (l += v[s].substr(0, n.CHARACTER_LIMIT - l.length - 1));
                                    break
                                }
                                l += (0 != s ? " " : "") + v[s]
                            }
                        else
                            (-1 == s || s >= n.CHARACTER_LIMIT) && (s = n.CHARACTER_LIMIT - 1),
                            l = c.substr(0, s + 1);
                        c = c.substr(l.length, c.length - l.length);
                        a.push(l)
                    }
                    0 < c.length && o(c)
                } else
                    o(t);
                if (n.multipartText = a,
                n.checkSpeechAllowed()) {
                    for (n.fallbackMode && 0 < n.fallback_audiopool.length && n.clearFallbackPool(),
                    n.msgprofile = h,
                    n.log("Voice picked: " + n.msgprofile.systemvoice.name),
                    n.utterances = [],
                    n.fallbackChunks = [],
                    s = 0; s < a.length; s++)
                        !n.fallbackMode && n.getServiceEnabled(n.services.NATIVE_TTS) ? (n.log("Using SpeechSynthesis"),
                        y = n.services.NATIVE_TTS,
                        o = new SpeechSynthesisUtterance,
                        o.voiceURI = h.systemvoice.voiceURI,
                        o.volume = n.selectBest([h.collectionvoice.volume, h.systemvoice.volume, 1]),
                        o.rate = n.selectBest([n.iOS9plus ? 1 : null, h.collectionvoice.rate, h.systemvoice.rate, r]),
                        o.pitch = n.selectBest([h.collectionvoice.pitch, h.systemvoice.pitch, 1]),
                        o.text = a[s],
                        o.lang = n.selectBest([h.collectionvoice.lang, h.systemvoice.lang]),
                        o.rvIndex = s,
                        o.rvTotal = a.length,
                        0 == s && (o.onstart = n.speech_onstart),
                        n.msgparameters.onendcalled = !1,
                        null != e ? (o.voice = "undefined" != typeof e.voice ? e.voice : h.systemvoice,
                        s < a.length - 1 && 1 < a.length ? (o.onend = n.onPartEnd,
                        o.hasOwnProperty("addEventListener") && o.addEventListener("end", n.onPartEnd)) : (o.onend = n.speech_onend,
                        o.hasOwnProperty("addEventListener") && o.addEventListener("end", n.speech_onend)),
                        o.onerror = e.onerror || function(r) {
                            n.log("RV: Unknown Error");
                            n.log(r);
                            "not-allowed" === r.error && (n.speechSynthesisNotAllowedError = !0,
                            n.speak(t, i, e))
                        }
                        ,
                        e.rate = n.validateParameters(e, "rate"),
                        e.pitch = n.validateParameters(e, "pitch"),
                        e.volume = n.validateParameters(e, "volume"),
                        o.onpause = e.onpause,
                        o.onresume = e.onresume,
                        o.onmark = e.onmark,
                        o.onboundary = e.onboundary || n.onboundary,
                        o.pitch = null != e.pitch ? e.pitch : o.pitch,
                        o.rate = n.iOS ? (null != e.rate ? e.rate * e.rate : 1) * o.rate : (null != e.rate ? e.rate : r) * o.rate,
                        o.volume = null != e.volume ? e.volume : o.volume) : (n.log("No Params received for current Utterance"),
                        o.voice = h.systemvoice,
                        e = e || {},
                        o.onend = n.speech_onend,
                        o.onboundary = n.onboundary,
                        o.onerror = function(r) {
                            n.log("RV: Unknown Error");
                            n.log(r);
                            "not-allowed" === r.error && (n.speechSynthesisNotAllowedError = !0,
                            n.speak(t, i, e))
                        }
                        ),
                        n.utterances.push(o),
                        0 == s && (n.currentMsg = o),
                        n.tts_speak(o)) : n.fallbackMode && n.getServiceEnabled(n.services.FALLBACK_AUDIO) && (y = n.services.FALLBACK_AUDIO,
                        n.fallback_playbackrate = n.def_fallback_playbackrate,
                        o = n.selectBest([h.collectionvoice.pitch, h.systemvoice.pitch, 1]),
                        c = n.selectBest([n.iOS9plus ? 1 : null, h.collectionvoice.rate, h.systemvoice.rate, 1]),
                        l = n.selectBest([h.collectionvoice.volume, h.systemvoice.volume, 1]),
                        null != e && (o *= null != e.pitch ? e.pitch : 1,
                        c *= null != e.rate ? e.rate : 1,
                        l *= null != e.volume ? e.volume : 1,
                        p = e.extraParams || null),
                        o /= 2,
                        c /= 2,
                        l *= 2,
                        o = Math.min(Math.max(o, 0), 1),
                        c = Math.min(Math.max(c, 0), 1),
                        l = Math.min(Math.max(l, 0), 1),
                        v = "?t=" + encodeURIComponent(a[s]) + "&tl=" + (h.collectionvoice.lang || h.systemvoice.lang || "en-US") + "&sv=" + (h.collectionvoice.service || h.systemvoice.service || "") + "&vn=" + (h.collectionvoice.voicename || h.systemvoice.voicename || "") + "&pitch=" + o.toString() + "&rate=" + c.toString() + "&vol=" + l.toString(),
                        "undefined" != typeof rvApiEndpoint && rvApiEndpoint && (v = "?text=" + encodeURIComponent(a[s]) + "&lang=" + (h.collectionvoice.lang || h.systemvoice.lang || "en-US") + "&engine=" + (h.collectionvoice.service || h.systemvoice.service || "") + "&name=" + (h.collectionvoice.voicename || h.systemvoice.voicename || "") + "&pitch=" + o.toString() + "&rate=" + c.toString() + "&volume=" + l.toString()),
                        o = n.fallbackServicePath + v,
                        "undefined" != typeof rvApiKey && (o += "&key=" + rvApiKey),
                        "undefined" == typeof rvApiKey && n.is_bundle && (o += "&key=FQ9r4hgY"),
                        "undefined" == typeof rvApiKey && n.is_wordpress && (o += "&key=HY7lTyiS"),
                        void 0 !== h.collectionvoice.gender && (o += "&gender=" + h.collectionvoice.gender),
                        p && (o += "&extraParams=" + JSON.stringify(p)),
                        n.fallbackChunks.push({
                            text: a[s],
                            url: o,
                            audio: null
                        }));
                    n.fallbackMode && n.getServiceEnabled(n.services.FALLBACK_AUDIO) && (n.fallbackChunkIndex = 0,
                    n.fallback_startPart());
                    n.log("Service used: " + y)
                } else
                    n.scheduledSpeak = {
                        text: t,
                        voicename: i,
                        parameters: e
                    }
            } else
                console.error("Selected voice does not exist: " + i),
                n.Dispatch("OnMissingVoiceError", {
                    voice: i
                });
        else
            setTimeout(function() {
                n.speak(t, i, e)
            }, 15)
    }
    ;
    n.startTimeout = function(t, i) {
        var r = n.msgprofile.collectionvoice.timerSpeed;
        null == n.msgprofile.collectionvoice.timerSpeed && (r = 1);
        0 >= r || (n.timeoutId = setTimeout(i, n.getEstimatedTimeLength(t, r)),
        n.log("Timeout ID: " + n.timeoutId))
    }
    ;
    n.checkAndCancelTimeout = function() {
        null != n.timeoutId && (clearTimeout(n.timeoutId),
        n.timeoutId = null)
    }
    ;
    n.speech_timedout = function() {
        n.cancel();
        n.cancelled = !1;
        n.speech_onend()
    }
    ;
    n.speech_onend = function() {
        n.checkAndCancelTimeout();
        !0 === n.cancelled ? n.cancelled = !1 : (n.log("on end fired"),
        null != n.msgparameters && null != n.msgparameters.onend && 1 != n.msgparameters.onendcalled && (n.log("Speech on end called  -" + n.msgtext),
        n.msgparameters.onendcalled = !0,
        n.msgparameters.onend()))
    }
    ;
    n.speech_onstart = function() {
        n.onstartFired || (n.onstartFired = !0,
        n.log("Speech start"),
        n.enableEstimationTimeout && n.useTimer && (n.fallbackMode || n.startTimeout(n.msgtext, n.speech_timedout)),
        n.msgparameters.onendcalled = !1,
        null == n.msgparameters || null == n.msgparameters.onstart) || n.msgparameters.onstart()
    }
    ;
    n.fallback_startPart = function() {
        0 == n.fallbackChunkIndex && n.speech_onstart();
        n.fallback_updateChunksBuffer();
        n.fallback_audio = n.fallbackChunks[n.fallbackChunkIndex].audio;
        null == n.fallback_audio ? n.log("RV: Fallback Audio is not available") : (function() {
            var t = n.fallback_audio, r, i;
            setTimeout(function() {
                t.playbackRate = n.fallback_playbackrate
            }, 50);
            t.onloadedmetadata = function() {
                t.playbackRate = n.fallback_playbackrate
            }
            ;
            r = function(t) {
                setTimeout(function() {
                    if (0 == t.currentTime) {
                        n.log("Audio chunk not playing. Trying to recover. Disabling time estimation");
                        n.enableEstimationTimeout = !1;
                        n.checkAndCancelTimeout();
                        t.load();
                        var i = function() {
                            t.play();
                            t.removeEventListener("canplaythrough", i)
                        };
                        t.addEventListener("canplaythrough", i, !1)
                    }
                }, 700)
            }
            ;
            2 <= t.readyState ? (t.play(),
            r(t)) : (i = function() {
                t.play();
                t.removeEventListener("canplaythrough", i)
            }
            ,
            t.addEventListener("canplaythrough", i, !1))
        }(),
        n.fallback_audio.onerror = function(n) {
            function i() {
                if (this.readyState == this.DONE && 200 !== this.status)
                    switch (this.status) {
                    case 400:
                        console.error("ResponsiveVoice audio could not be loaded. Invalid parameters.");
                        break;
                    case 403:
                        console.error("ResponsiveVoice invalid API key. See https://responsivevoice.org/register?devtools=" + encodeURIComponent(window.location.href));
                        break;
                    default:
                        console.error("ResponsiveVoice audio could not be loaded. There is an issue connecting your browser to the API endpoint.")
                    }
            }
            switch (n.target.error.code) {
            case n.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:
                var t = new XMLHttpRequest;
                t.open("GET", n.target.src, !0);
                t.send();
                t.onreadystatechange = i;
                break;
            default:
                console.error("ResponsiveVoice: an unknown error occurred.")
            }
        }
        ,
        n.fallback_audio.addEventListener("ended", n.fallback_finishPart),
        n.enableEstimationTimeout && n.useTimer && n.startTimeout(n.multipartText[n.fallbackChunkIndex], n.fallback_finishPart))
    }
    ;
    n.isFallbackAudioPlaying = function() {
        for (var t, i = 0; i < n.fallback_audiopool.length; i++)
            if (t = n.fallback_audiopool[i],
            !t.paused && !t.ended && t.currentTime != t.duration)
                return !0;
        return !1
    }
    ;
    n.fallback_finishPart = function() {
        n.isFallbackAudioPlaying() ? (n.checkAndCancelTimeout(),
        n.timeoutId = setTimeout(n.fallback_finishPart, 1e3 * (n.fallback_audio.duration - n.fallback_audio.currentTime))) : (n.checkAndCancelTimeout(),
        n.fallbackChunkIndex < n.fallbackChunks.length - 1 ? (n.fallbackChunkIndex++,
        n.fallback_startPart()) : n.speech_onend())
    }
    ;
    n.cancel = function() {
        n.checkAndCancelTimeout();
        n.fallbackMode ? (null != n.fallback_audio && n.fallback_audio.pause(),
        n.clearFallbackPool()) : (n.cancelled = !0,
        speechSynthesis.cancel())
    }
    ;
    n.voiceSupport = function() {
        return "speechSynthesis"in window
    }
    ;
    n.OnFinishedPlaying = function() {
        null != n.msgparameters && null != n.msgparameters.onend && n.msgparameters.onend()
    }
    ;
    n.setDefaultVoice = function(t) {
        if (n.rvsMapped) {
            var i = n.getResponsiveVoice(t);
            null != i && (n.default_rv = i)
        } else
            setTimeout(function() {
                n.setDefaultVoice(t)
            }, 15)
    }
    ;
    n.setDefaultRate = function(n) {
        var t = n;
        n = parseFloat(n);
        isNaN(n) ? console.error("[responsiveVoice.setDefaultRate] invalid argument: " + t.toString()) : 0 === n ? console.error("[responsiveVoice.setDefaultRate] rate must be > 0") : 1.5 < n ? console.error("[responsiveVoice.setDefaultRate] rate must be <= 1.5") : r = n
    }
    ;
    n.mapRVs = function() {
        var f, e;
        if ("object" == typeof navigator)
            var i, t = "anguage", r = navigator, u = (i = r["l" + t + "s"],
            i && i.length ? i : (t = r["l" + t] || r["browserL" + t] || r["userL" + t]) ? [t] : t);
        else
            u = void 0;
        for (u = u[0],
        i = 0; i < n.responsivevoices.length; i++)
            for (t = n.responsivevoices[i],
            r = 0; r < t.voiceIDs.length; r++)
                if (f = n.voicecollection[t.voiceIDs[r]],
                1 != f.fallbackvoice) {
                    if (e = n.getSystemVoice(f.name),
                    n.forcedFallbackMode && (e = null),
                    n.iOS12_0 && t.lang.toLowerCase() != u.toLowerCase() && t.lang.toLowerCase().split("-")[0] != u.toLowerCase() && (e = null),
                    null != e) {
                        t.mappedProfile = {
                            systemvoice: e,
                            collectionvoice: f
                        };
                        break
                    }
                } else {
                    t.mappedProfile = {
                        systemvoice: {},
                        collectionvoice: f
                    };
                    break
                }
        n.rvsMapped = !0
    }
    ;
    n.getMatchedVoice = function(t) {
        for (var r, i = 0; i < t.voiceIDs.length; i++)
            if (r = n.getSystemVoice(n.voicecollection[t.voiceIDs[i]].name),
            null != r)
                return r;
        return null
    }
    ;
    n.getSystemVoice = function(t) {
        var r = String.fromCharCode(160), u = t.replace(new RegExp("\\s+|" + r,"g"), ""), i;
        if ("undefined" == typeof n.systemvoices || null === n.systemvoices)
            return null;
        for (i = 0; i < n.systemvoices.length; i++)
            if (0 === n.systemvoices[i].name.localeCompare(t) || 0 === n.systemvoices[i].name.replace(new RegExp("\\s+|" + r,"g"), "").replace(/ *\([^)]*\) */g, "").localeCompare(u))
                return n.systemvoices[i];
        return null
    }
    ;
    n.getResponsiveVoice = function(t) {
        for (var i = 0; i < n.responsivevoices.length; i++)
            if (n.responsivevoices[i].name == t)
                return t = n.fallbackMode,
                n.fallbackMode = !0 === n.responsivevoices[i].mappedProfile.collectionvoice.fallbackvoice || !0 === n.forcedFallbackMode ? !0 : !1,
                t != n.fallbackMode && (n.mapRVs(),
                n.Dispatch("OnServiceSwitched")),
                n.responsivevoices[i];
        return null
    }
    ;
    n.Dispatch = function(t, i) {
        var e, r, u, f;
        if (i = void 0 !== i ? i : null,
        n.hasOwnProperty(t + "_callbacks") && null != n[t + "_callbacks"] && 0 < n[t + "_callbacks"].length) {
            for (e = n[t + "_callbacks"],
            r = 0; r < e.length; r++)
                e[r](i);
            return !0
        }
        return u = t + "_callbacks_timeout",
        f = t + "_callbacks_timeoutCount",
        n.hasOwnProperty(u) || (n[f] = 10,
        n[u] = setInterval(function() {
            --n[f];
            (n.Dispatch(t, i) || 0 > n[f]) && clearTimeout(n[u])
        }, 50)),
        !1
    }
    ;
    n.AddEventListener = function(t, i) {
        n.hasOwnProperty(t + "_callbacks") || (n[t + "_callbacks"] = []);
        n[t + "_callbacks"].push(i)
    }
    ;
    n.addEventListener = n.AddEventListener;
    n.RemoveEventListener = function(t, i) {
        n[t + "_callbacks"] && -1 != n[t + "_callbacks"].indexOf(i) && n[t + "_callbacks"].splice(n[t + "_callbacks"].indexOf(i), 1)
    }
    ;
    n.clickEvent = function() {
        n.log("Click event");
        n.click_event_detected = !0;
        n.initializePermissionsTimeout = setTimeout(n.initializePermissions, 5);
        n.userInteractionEvents.forEach(function(t) {
            window.removeEventListener(t, n.clickEvent, !1)
        });
        n.Dispatch("OnClickEvent")
    }
    ;
    n.initializePermissions = function() {
        if (n.iOS && !n.iOS_initialized) {
            if (n.log("Initializing iOS click event"),
            "undefined" != typeof speechSynthesis) {
                var t = new SpeechSynthesisUtterance(" ");
                speechSynthesis.speak(t)
            }
            n.iOS_initialized = !0
        }
        n.is_android && !n.android_initialized && (n.log("Initializing Android click event"),
        "undefined" != typeof speechSynthesis && (t = new SpeechSynthesisUtterance(" "),
        speechSynthesis.speak(t)),
        n.android_initialized = !0);
        n.initFallbackPool()
    }
    ;
    n.isPlaying = function() {
        return n.fallbackMode ? null != n.fallback_audio && !n.fallback_audio.ended && !n.fallback_audio.paused : "undefined" != typeof speechSynthesis ? speechSynthesis.speaking : !1
    }
    ;
    n.clearFallbackPool = function() {
        for (var t = 0; t < n.fallback_audiopool.length; t++)
            null != n.fallback_audiopool[t] && n.fallback_audiopool[t].pause();
        n.fallback_audiopool_index = 0;
        n.fallbackChunks = []
    }
    ;
    n.initFallbackPool = function() {
        var i, r, t;
        if (!n.fallback_audiopool || 0 == n.fallback_audiopool.length) {
            for (i = 0; 10 > i; i++)
                r = i,
                t = document.createElement("AUDIO"),
                t.preload = "auto",
                n.is_android && (t.src = "data:audio/mpeg;base64,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",
                t.load(),
                9 == r && (n.log("Android HTML audio initialized"),
                n.android_initialized = !0)),
                n.iOS && (t.src = "data:audio/mpeg;base64,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",
                t.load(),
                9 == r && (n.log("iOS HTML audio initialized"),
                n.iOS_initialized = !0)),
                n.fallback_audiopool.push(t);
            n.fallback_audiopool_index = 0
        }
    }
    ;
    n.allowSpeechClicked = function(t) {
        n.allowSpeechDiv.parentNode.removeChild(n.allowSpeechDiv);
        n.allowSpeechDiv = null;
        (n.speechAllowedByUser = t) && (n.clickEvent(),
        n.scheduledSpeak && (n.speak(n.scheduledSpeak.text, n.scheduledSpeak.voicename, n.scheduledSpeak.parameters),
        n.scheduledSpeak = null));
        n.Dispatch("OnAllowSpeechClicked")
    }
    ;
    n.checkSpeechAllowed = function(t) {
        if (0 == n.speechAllowedByUser)
            return !1;
        var i = n.is_android || n.iOS
          , r = n.is_safari && (n.fallbackMode || n.forcedFallbackMode);
        return !0 !== n.disablePermissionPopup && (!0 === n.allowPermissionPopupEverywhere || i || r || !0 === n.speechSynthesisNotAllowedError) && !n.click_event_detected ? n.allowSpeechDiv ? void 0 : (n.allowSpeechDiv_appearances = null == n.allowSpeechDiv_appearances ? 1 : ++n.allowSpeechDiv_appearances,
        2 < n.allowSpeechDiv_appearances) ? (console.log("ResponsiveVoice: Speech not allowed by user"),
        !1) : (i = document.createElement("style"),
        i.innerHTML = '.rvNotification{position:fixed;background-color:#fff;text-align:center;font-family:-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;font-weight:400;line-height:1.5;box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19);z-index:10000;width:100vw;left:0;bottom:0;font-size:1rem;padding-bottom:.5em;padding-right:.5em}.rvButtonRow{padding-right:2em;padding-bottom:1em;text-align:right;font-size:medium}.rvButton{cursor:pointer;display:inline-block;margin-left:1em;padding:.8em 2em;border-radius:3px;font-size:small}.rvButtonAllow{border:none;background-color:#2b8cff;color:#fff}.rvButtonDeny{border:1px solid #2b8cff;color:#2b8cff;background-color:#fff}.rvTextRow{padding-top:1em;padding-bottom:2em}@media (min-width:576px){.rvNotification{width:60vw;left:20vw}}@media (min-width:768px){.rvNotification{width:50vw;left:25vw}}@media (min-width:992px){.rvNotification{width:40vw;left:30vw}}@media (min-width:1200px){.rvNotification{width:30vw;left:35vw}}',
        document.body.appendChild(i),
        n.allowSpeechDiv = document.createElement("div"),
        n.allowSpeechDiv.classList.add("rvNotification"),
        void 0 == t && (t = {}),
        n.allowSpeechDiv.innerHTML = '<div class="rvTextRow"><strong>' + (void 0 != t.urlOverride ? t.urlOverride : window.location.hostname) + "<\/strong> " + (void 0 != t.textOverride ? t.textOverride : "wants to play speech") + '<\/div><div class="rvButtonRow"><div onclick="responsiveVoice.allowSpeechClicked(false);" class="rvButton rvButtonDeny">DENY<\/div><div onclick="responsiveVoice.allowSpeechClicked(true);" class="rvButton rvButtonAllow">ALLOW<\/div><\/div>',
        document.body.appendChild(n.allowSpeechDiv),
        !1) : !0
    }
    ;
    n.fallback_audioPool_getAudio = function() {
        return n.initFallbackPool(),
        n.fallback_audiopool_index >= n.fallback_audiopool.length && (n.fallback_audiopool_index = 0),
        n.fallback_audiopool[n.fallback_audiopool_index++]
    }
    ;
    n.fallback_updateChunksBuffer = function() {
        for (var i, t = n.fallbackChunkIndex; t < Math.min(n.fallbackChunks.length, n.fallbackChunkIndex + n.fallbackBufferLength); t++)
            i = n.fallbackChunks[t],
            null == i.audio && (i.audio = n.fallback_audioPool_getAudio(),
            function(i) {
                var r = function() {
                    i.audio.src = i.url;
                    i.audio.playbackRate = n.fallback_playbackrate;
                    i.audio.preload = "auto";
                    i.audio.load()
                };
                0 == t ? r() : setTimeout(r, 50 * t)
            }(i))
    }
    ;
    n.selectBest = function(n) {
        for (var t = 0; t < n.length; t++)
            if (null != n[t])
                return n[t];
        return null
    }
    ;
    n.pause = function() {
        n.fallbackMode ? null != n.fallback_audio && n.fallback_audio.pause() : (speechSynthesis.pause(),
        n.ttsCancelledByTimeout = !1,
        n.ttsKeepAliveTimeout = setTimeout(function() {
            n.ttsKeepAliveTimeout = null;
            speechSynthesis.cancel();
            n.ttsCancelledByTimeout = !0
        }, 6e4))
    }
    ;
    n.resume = function() {
        var i, t, r;
        if (n.fallbackMode)
            null != n.fallback_audio && n.fallback_audio.play();
        else if (n.ttsCancelledByTimeout)
            for (i = n.ttsCancelledByTimeout = !1,
            t = 0; t < n.utterances.length; t++)
                r = n.utterances[t],
                n.currentMsg == r && (i = !0),
                i && n.tts_speak(r);
        else
            n.ttsKeepAliveTimeout && (clearTimeout(n.ttsKeepAliveTimeout),
            n.ttsKeepAliveTimeout = null),
            speechSynthesis.resume()
    }
    ;
    n.tts_speak = function(t) {
        setTimeout(function() {
            n.cancelled = !1;
            n.analytics.characterCount += t.text.toString().length;
            speechSynthesis.speak(t)
        }, .01)
    }
    ;
    n.setVolume = function(t) {
        if (n.isPlaying())
            if (n.fallbackMode) {
                for (var i = 0; i < n.fallback_audiopool.length; i++)
                    n.fallback_audiopool[i].volume = t;
                n.fallback_audio.volume = t
            } else
                for (i = 0; i < n.utterances.length; i++)
                    n.utterances[i].volume = t
    }
    ;
    n.onPartEnd = function(t) {
        null != n.msgparameters && null != n.msgparameters.onchuckend && n.msgparameters.onchuckend();
        n.Dispatch("OnPartEnd");
        t = n.utterances.indexOf(t.utterance);
        n.currentMsg = n.utterances[t + 1]
    }
    ;
    n.onboundary = function() {
        n.log("On Boundary");
        n.iOS && !n.onstartFired && n.speech_onstart()
    }
    ;
    n.numToWords = function(t) {
        var e = function() {
            return function(n, t) {
                var i, o;
                if (Array.isArray(n))
                    return n;
                if (Symbol.iterator in Object(n)) {
                    var r = []
                      , u = !0
                      , f = !1
                      , e = void 0;
                    try {
                        for (i = n[Symbol.iterator](); !(u = (o = i.next()).done) && (r.push(o.value),
                        !t || r.length !== t); u = !0)
                            ;
                    } catch (s) {
                        f = !0;
                        e = s
                    } finally {
                        try {
                            !u && i["return"] && i["return"]()
                        } finally {
                            if (f)
                                throw e;
                        }
                    }
                    return r
                }
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
            }
        }()
          , u = function(n) {
            return 0 === n.length
        }
          , o = function(n) {
            return function(t) {
                return t.slice(0, n)
            }
        }
          , s = function(n) {
            return function(t) {
                return t.slice(n)
            }
        }
          , h = function(n) {
            return n.slice(0).reverse()
        }
          , f = function(n) {
            return function(t) {
                return function(i) {
                    return n(t(i))
                }
            }
        }
          , c = function(n) {
            return !n
        }
          , l = function a(n) {
            return function(t) {
                var i, e, r, f;
                if (u(t))
                    i = [];
                else {
                    if (i = [o(n)(t)],
                    e = i.concat,
                    t = a(n)(s(n)(t)),
                    Array.isArray(t)) {
                        for (r = 0,
                        f = Array(t.length); r < t.length; r++)
                            f[r] = t[r];
                        t = f
                    } else
                        t = Array.from(t);
                    i = e.call(i, t)
                }
                return i
            }
        }
          , i = " one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen".split(" ")
          , r = "  twenty thirty forty fifty sixty seventy eighty ninety".split(" ")
          , v = " thousand million billion trillion quadrillion quintillion sextillion septillion octillion nonillion".split(" ")
          , y = function(n) {
            var t = e(n, 3), u;
            return n = t[0],
            u = t[1],
            t = t[2],
            [0 === (Number(t) || 0) ? "" : i[t] + " hundred ", 0 === (Number(n) || 0) ? r[u] : r[u] && r[u] + " " || "", i[u + n] || i[n]].join("")
        }
          , p = function(n, t) {
            return "" === n ? n : n + " " + v[t]
        };
        return "number" == typeof t ? n.numToWords(String(t)) : "0" === t ? "zero" : f(l(3))(h)(Array.from(t)).map(y).map(p).filter(f(c)(u)).reverse().join(" ").trim()
    }
    ;
    n.getWords = function(t) {
        var i, r;
        for (t = t.replace(/$|\u00a5|\u20a1|\u20ac|\u00a3|\u20aa|\u20b9|\uffe5|\u17db|\u20a9|\u20a6|\u0e3f|\u20b4|\u20ab/gi, " dummy currency "),
        i = t.split(/(\s*[\s,]\s*|\?|;|:|\.|\(|\)|!)/),
        i = i.filter(function(n) {
            return /[^\s]/.test(n)
        }),
        r = 0; r < i.length; r++)
            null != (t = i[r].toString().match(/\d+/)) && (i.splice(r, 1),
            n.numToWords(+t[0]).split(/\s+/).map(function(n) {
                i.push(n)
            }));
        return i
    }
    ;
    n.getEstimatedTimeLength = function(t, i) {
        var u = n.getWords(t), f = 0, o = n.fallbackMode ? 1300 : 700, e, r;
        return i = i || 1,
        u.map(function(n) {
            f += (n.toString().match(/[^ ]/igm) || n).length
        }),
        e = u.length,
        r = 60 / n.WORDS_PER_MINUTE * i * 1e3 * e,
        5 > e && (r = i * (o + 50 * f)),
        n.log("Estimated time length: " + r + " ms, words: [" + u + "], charsCount: " + f),
        r
    }
    ;
    n.validateParameters = function(n, t) {
        if ("undefined" == typeof n[t])
            return n[t];
        switch (t) {
        case "rate":
        case "pitch":
        case "volume":
            var i = Number(n[t]);
            isNaN(i) && console.warn("ResponsiveVoice: the parameter " + t + ' has a wrong value "' + n[t] + '". Defaults were used.');
            n[t] = isNaN(i) ? "1" : n[t]
        }
        return n[t]
    }
    ;
    n.services = {
        NATIVE_TTS: 0,
        FALLBACK_AUDIO: 1
    };
    n.servicesPriority = [0, 1];
    n.servicesEnabled = [];
    n.setServiceEnabled = function(t, i) {
        n.servicesEnabled[t] = i
    }
    ;
    n.getServiceEnabled = function(t) {
        return n.servicesEnabled[t] || !1
    }
    ;
    n.setServiceEnabled(n.services.NATIVE_TTS, !0);
    n.setServiceEnabled(n.services.FALLBACK_AUDIO, !0);
    n.forceFallbackMode = function(t) {
        n.forcedFallbackMode = t;
        n.fallbackMode = t;
        n.mapRVs();
        n.Dispatch("OnServiceSwitched")
    }
    ;
    n.enableWindowClickHook = function() {
        n.userInteractionEvents.forEach(function(t) {
            window.addEventListener(t, n.clickEvent, !1)
        })
    }
    ;
    n.setTextReplacements = function(n) {
        var u, r, i, f, e;
        if (null == n)
            t = null;
        else
            for (t = [],
            u = 0; u < n.length; u++) {
                if (r = n[u],
                i = r.searchvalue,
                "string" == typeof i)
                    try {
                        f = i.match(RegExp("^/(.*?)/([gimy]*)$"));
                        e = new RegExp(f[1],f[2]);
                        e instanceof RegExp && (i = e)
                    } catch (o) {
                        i = new RegExp(i,"g")
                    }
                t.push({
                    searchvalue: i,
                    newvalue: r.newvalue,
                    collectionvoices: r.collectionvoices,
                    systemvoices: r.systemvoices
                })
            }
    }
    ;
    i = /(code\.responsivevoice\.org|local-lb).*?responsivevoice(\.\w+)?\.js/ig;
    "interactive" === document.readyState ? n.init() : document.addEventListener("DOMContentLoaded", function() {
        n.init()
    });
    window.addEventListener("beforeunload", function() {
        if (rvApiKey && n.analytics.characterCount) {
            var t = new FormData;
            t.append("key", rvApiKey);
            t.append("count", n.analytics.characterCount);
            navigator.sendBeacon("https://app.responsivevoice.org/analytics/cc/session", t) && (n.analytics.characterCount = 0)
        }
    })
}
,
responsiveVoice = new ResponsiveVoice),
responsiveVoice.debug = !0),
document.location.search && /rvWebsiteVerify=RIUfoIzv/gi.test(document.location.search)) {
    function rvNotificationPopup() {
        function r() {
            responsiveVoice.speak(document.getElementById("rv_RIUfoIzv_notification").getElementsByClassName("rv_notification_text")[0].textContent)
        }
        var i = '#rv_RIUfoIzv_notification,#rv_RIUfoIzv_notification *{font-family:"Open Sans",Helvetica,Arial,sans-serif,Tahoma!important}#rv_RIUfoIzv_notification{transition-duration:.3s;opacity:1;transform:scale(1);background:#fff;border:1px solid rgba(0,0,0,.125);border-radius:.3rem;position:fixed;z-index:2147483646;top:20px;left:20px;width:400px;padding:25px;-webkit-box-shadow:0 2px 4px 0 rgba(0,0,0,.3);-moz-box-shadow:0 2px 4px 0 rgba(0,0,0,.3);box-shadow:0 2px 4px 0 rgba(0,0,0,.3)}#rv_RIUfoIzv_notification .rv_notification_logo{background:url(https://app.responsivevoice.org/favicon-96x96.png) no-repeat;background-size:50px 50px;float:left;margin:0 20px 0 0;width:50px;height:50px}#rv_RIUfoIzv_notification_play{background:url(https://app.responsivevoice.org/images/play.png) no-repeat;background-size:25px 25px;float:left;margin:0 5px 0 0;width:25px;height:25px;cursor:pointer}#rv_RIUfoIzv_notification .rv_notification_body{float:left;color:#343a40;font-size:13px;width:78%;min-height:50px;vertical-align:middle}#rv_RIUfoIzv_notification .rv_notification_title{color:#1d643b;font-size:16px;font-weight:700;margin:1px 0 4px 0;display:inline-block}#rv_RIUfoIzv_notification_close{position:absolute;top:15px;right:15px;font-size:22px;color:#343a40;cursor:pointer;line-height:11px}.rv_notification_clear{clear:both}', u = document.head || document.getElementsByTagName("head")[0], n = document.createElement("style"), t;
        u.appendChild(n);
        n.type = "text/css";
        n.styleSheet ? n.styleSheet.cssText = i : n.appendChild(document.createTextNode(i));
        t = document.createElement("div");
        t.innerHTML = '<div id=rv_RIUfoIzv_notification><div id=rv_RIUfoIzv_notification_close>×<\/div><div class=rv_notification_logo><\/div><div class=rv_notification_body><div id=rv_RIUfoIzv_notification_play><\/div><span class=rv_notification_title>ResponsiveVoice URL verified<\/span><br><span class=rv_notification_text>Your <i style="display: none;">ResponsivVoice<\/i> code snippet is correctly installed, you may now close this window.<\/span><\/div><div class=rv_notification_clear><\/div><\/div>';
        document.body.appendChild(t);
        document.getElementById("rv_RIUfoIzv_notification_play").addEventListener("click", function() {
            r()
        });
        document.getElementById("rv_RIUfoIzv_notification_close").addEventListener("click", function() {
            n.remove();
            t.remove()
        });
        r()
    }
    document.addEventListener("DOMContentLoaded", function() {
        var n = new XMLHttpRequest;
        n.open("POST", "https://code.responsivevoice.org/verify/RIUfoIzv", !0);
        n.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        n.send("rv=" + (typeof responsiveVoice != "undefined"));
        n.onreadystatechange = function() {
            this.readyState == 4 && this.status == 200 && rvNotificationPopup()
        }
    }, !1)
}
!function(n, t) {
    if ("function" == typeof define && define.amd)
        define("hoverintent", ["module"], t);
    else if ("undefined" != typeof exports)
        t(module);
    else {
        var i = {
            exports: {}
        };
        t(i);
        n.hoverintent = i.exports
    }
}(this, function(n) {
    "use strict";
    var t = Object.assign || function(n) {
        for (var i, r, t = 1; t < arguments.length; t++) {
            i = arguments[t];
            for (r in i)
                Object.prototype.hasOwnProperty.call(i, r) && (n[r] = i[r])
        }
        return n
    }
    ;
    n.exports = function(n, i, r) {
        function nt(n, t) {
            return u && (u = clearTimeout(u)),
            h = 0,
            e ? void 0 : r.call(n, t)
        }
        function c(n) {
            l = n.clientX;
            a = n.clientY
        }
        function p(n, t) {
            if (u && (u = clearTimeout(u)),
            Math.abs(v - l) + Math.abs(y - a) < f.sensitivity)
                return h = 1,
                e ? void 0 : i.call(n, t);
            v = l;
            y = a;
            u = setTimeout(function() {
                p(n, t)
            }, f.interval)
        }
        function w(t) {
            return o = !0,
            u && (u = clearTimeout(u)),
            n.removeEventListener("mousemove", c, !1),
            1 !== h && (v = t.clientX,
            y = t.clientY,
            n.addEventListener("mousemove", c, !1),
            u = setTimeout(function() {
                p(n, t)
            }, f.interval)),
            this
        }
        function b(t) {
            return o = !1,
            u && (u = clearTimeout(u)),
            n.removeEventListener("mousemove", c, !1),
            1 === h && (u = setTimeout(function() {
                nt(n, t)
            }, f.timeout)),
            this
        }
        function k(t) {
            o || (e = !0,
            i.call(n, t))
        }
        function d(t) {
            !o && e && (e = !1,
            r.call(n, t))
        }
        function tt() {
            n.addEventListener("focus", k, !1);
            n.addEventListener("blur", d, !1)
        }
        function g() {
            n.removeEventListener("focus", k, !1);
            n.removeEventListener("blur", d, !1)
        }
        var l, a, v, y, o = !1, e = !1, s = {}, h = 0, u = 0, f = {
            sensitivity: 7,
            interval: 100,
            timeout: 0,
            handleFocus: !1
        };
        return s.options = function(n) {
            var i = n.handleFocus !== f.handleFocus;
            return f = t({}, f, n),
            i && (f.handleFocus ? tt() : g()),
            s
        }
        ,
        s.remove = function() {
            n && (n.removeEventListener("mouseover", w, !1),
            n.removeEventListener("mouseout", b, !1),
            g())
        }
        ,
        n && (n.addEventListener("mouseover", w, !1),
        n.addEventListener("mouseout", b, !1)),
        s
    }
});
var config = {
    welcomeMessage: !1,
    speakSelectedText: !1,
    speakLinks: !1,
    speakInactivity: !1,
    speakEndPage: !1,
    exitIntent: !1,
    accesibilityNavigation: !1,
    accesibilityNavigation2: !1,
    welcomeMessageTime: !1,
    text_welcomeMessage: null,
    text_speakInactivity: null,
    text_speakEndPage: null,
    text_exitIntent: null,
    trackEvents: !1,
    abTesting: !1,
    analytics_id: null,
    another_field: null
}
  , splitTestEnabled = config.abTesting || !1
  , splitTest_useGS = Math.random() < .5;
prerenderUsed = !1;
isPrerendered() && !prerenderUsed && (prerenderUsed = !0,
setTimeout(function() {
    if (!splitTestEnabled || splitTestEnabled && splitTest_useGS) {
        var n = GetRandomMsg("");
        n != null && n != "" && responsiveVoice.speak("According to Voicebrite, " + n, "UK English Male")
    }
    splitTestEnabled ? splitTest_useGS ? trackEvent("searchMessage", "impressionAB", "true") : trackEvent("searchMessage", "impressionAB", "false") : trackEvent("searchMessage", "impression")
}, 1500));
window.addEventListener("load", function() {
    function c() {
        var n = "";
        return window.getSelection ? n = window.getSelection().toString() : document.selection && document.selection.type != "Control" && (n = document.selection.createRange().text),
        n
    }
    function l(n, t, i) {
        if (n.length > 0)
            for (var r = 0; r < n.length; r++)
                t.forEach(function(t) {
                    n[r].addEventListener(t, function() {
                        i()
                    })
                })
    }
    function a() {
        t = c();
        t != r && t != "" && (r = t,
        responsiveVoice.cancel(),
        responsiveVoice.speak(t, "UK English Male"),
        trackEvent("agentFeature", "highlightText"))
    }
    function h() {
        window.innerHeight + window.pageYOffset >= document.body.offsetHeight - 100 && config.text_speakEndPage != null && config.text_speakEndPage != "" && (window.removeEventListener("scroll", h),
        responsiveVoice.speak(GetRandomMsg(config.text_speakEndPage), "UK English Male"),
        trackEvent("agentFeature", "scrollEnd"))
    }
    function v() {
        i += 1e3;
        i >= 3e4 && (responsiveVoice.speak(GetRandomMsg(config.text_speakInactivity), "UK English Male"),
        trackEvent("agentFeature", "inactivity"),
        i = 0)
    }
    function y(n) {
        n.clientY < 0 && (responsiveVoice.speak(GetRandomMsg(config.text_exitIntent), "UK English Male"),
        trackEvent("agentFeature", "exitIntent"))
    }
    var o = null, s, t, r, u, f, e, i, n;
    prerenderUsed && (o = setInterval(function() {
        isPrerendered() || (clearInterval(o),
        splitTestEnabled ? splitTest_useGS ? trackEvent("searchMessage", "visitAB", "true") : trackEvent("searchMessage", "visitAB", "false") : trackEvent("searchMessage", "visit"))
    }, 1e3));
    s = document.getElementsByTagName("a");
    Array.prototype.forEach.call(s, function(n) {
        hoverintent(n, function() {
            config.speakLinks && (responsiveVoice.speak(n.textContent, "UK English Male"),
            trackEvent("agentFeature", "spokenLink"))
        }, function() {})
    });
    t = "";
    r = "";
    config.speakSelectedText && l(document.querySelectorAll("PRE,DIV"), ["mouseup", "touchend"], a);
    u = !1;
    !config.welcomeMessage || config.welcomeMessageTime && !oneTimeTest("welcomeMessage") || isPrerendered() || prerenderUsed || (u = !0,
    setTimeout(function() {
        config.text_welcomeMessage != null && config.text_welcomeMessage != "" && (responsiveVoice.speak(GetRandomMsg(config.text_welcomeMessage), "UK English Male"),
        trackEvent("agentFeature", "welcomeMessage"))
    }, 1500));
    f = !1;
    e = null;
    !u && config.welcomeMessage2 && (!config.welcomeMessageTime || oneTimeTest("welcomeMessage2")) && config.text_welcomeMessage2 != null && config.text_welcomeMessage2 != "" && (e = setInterval(function() {
        isPrerendered() || f || (f = !0,
        responsiveVoice.speak(GetRandomMsg(config.text_welcomeMessage2), "UK English Male"),
        trackEvent("agentFeature", "welcomeMessage2"),
        clearInterval(e))
    }, 1e3));
    config.speakEndPage && window.addEventListener("scroll", h);
    i = 0;
    config.speakInactivity && (setInterval(v, 1e3),
    window.addEventListener("mousemove", function() {
        i = 0
    }),
    window.addEventListener("keyup", function() {
        i = 0
    }));
    config.speakInactivity && document.addEventListener("mouseout", y);
    n = 0;
    config.accesibilityNavigation && document.addEventListener("keyup", function(n) {
        var t = n.keyCode || n.which;
        if (n.target)
            switch (n.target.tagName) {
            case "A":
                t == "9" && (responsiveVoice.speak("Link 2 " + n.target.text, "UK English Male"),
                trackEvent("agentFeature", "accesibilityNavigation", "tab"));
                break;
            case "BUTTON":
                t == "9" && (setTimeout(responsiveVoice.speak(n.target.textContent + " button", "UK English Male"), 1e3),
                trackEvent("agentFeature", "accesibilityNavigation", "tab"));
                break;
            case "TEXTAREA":
                t == "9" && (responsiveVoice.speak("Text Input " + document.querySelectorAll(":focus")[0].getAttribute("placeholder"), "UK English Male"),
                trackEvent("agentFeature", "accesibilityNavigation", "tab"))
            }
    });
    config.accesibilityNavigation2 && document.addEventListener("keyup", function(t) {
        var i = t.keyCode || t.which;
        i == "40" && t.ctrlKey && (responsiveVoice.speak(document.querySelectorAll("p")[n].textContent, "UK English Male"),
        trackEvent("agentFeature", "accesibilityNavigation", "ctrl-arrow"),
        document.querySelectorAll("p")[n].scrollIntoView(!1),
        n = n + 1);
        i == "38" && t.ctrlKey && (responsiveVoice.speak(document.querySelectorAll("p")[n].textContent, "UK English Male"),
        trackEvent("agentFeature", "accesibilityNavigation", "ctrl-arrow"),
        document.querySelectorAll("p")[n].scrollIntoView(!1),
        n = n - 1,
        n < 1 && (n = 0))
    })
});
